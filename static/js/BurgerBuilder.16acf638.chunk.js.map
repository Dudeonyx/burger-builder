{"version":3,"sources":["components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Burger/BuildControls/BuildControls.module.css","components/Burger/BuildControls/BuildControl/BuildControl.tsx","components/Burger/BuildControls/BuildControls.tsx","containers/BurgerBuilder/BurgerBuilder.tsx"],"names":["module","exports","BuildControl","Label","Less","More","BuildControls","OrderButton","disable","enable","_ref","added","disabled","label","removed","react_default","a","createElement","className","styles","onClick","controls","type","memo","decrease","increase","ingredients","price","purchaseable","purchaseStart","map","ctrl","BuildControls_BuildControl_BuildControl","key","BurgerDisplay","lazy","__webpack_require__","e","then","bind","OrderSummary","offlineStyle","color","cursor","BurgerBuilder","state","purchasing","purchaseStartHandler","_this","setState","purchaseCancelHandler","purchaseContinueHandler","props","isAuth","history","push","pathname","setAuthRedirectUrl","offline","ingredientSetHandler","bacon","cheese","meat","salad","this","fetchIngredientsHandler","setTimeout","burger","error","Retry","retryHandler","mainMessage","additionalMessage","style","Loader","orderSummary","Fragment","Suspense","fallback","totalPrice","ingredientIncreaseHandler","ingredientDecreaseHandler","totalCost","purchaseCancel","purchaseContinue","Modal","show","hider","Component","mapBurgerBuilderDispatchToProps","increaseIngredient","decreaseIngredient","setIngredients","connectBurgerBuilder","connect","selectIngredientsError","selectIngredients","getPurchaseableFromStore","getTotalPriceFromStore","getAuthenticated","withErrorHandler","axios"],"mappings":"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","file":"static/js/BurgerBuilder.16acf638.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3qwVA\",\"Label\":\"BuildControl_Label__3EfNH\",\"Less\":\"BuildControl_Less__3RwUd\",\"More\":\"BuildControl_More__2IZnf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1Xi_J\",\"OrderButton\":\"BuildControls_OrderButton__1U7Bj\",\"disable\":\"BuildControls_disable__1ca1i\",\"enable\":\"BuildControls_enable__3KbEx\"};","import React, { FunctionComponent, MouseEventHandler } from 'react';\r\nimport styles from './BuildControl.module.css';\r\n\r\nexport interface IBuildControlProps {\r\n  removed: MouseEventHandler;\r\n  disabled: boolean;\r\n  label: string;\r\n  added: MouseEventHandler;\r\n}\r\nconst BuildControl: FunctionComponent<IBuildControlProps> = ({\r\n  added,\r\n  disabled,\r\n  label,\r\n  removed,\r\n}) => {\r\n  return (\r\n    <div className={styles.BuildControl}>\r\n      <div className={styles.Label}>{label}</div>\r\n      <button onClick={removed} className={styles.Less} disabled={disabled}>\r\n        Less\r\n      </button>\r\n      <button onClick={added} className={styles.More}>\r\n        More\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildControl;\r\n","import React, { FunctionComponent, memo } from 'react';\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport styles from './BuildControls.module.css';\r\nimport { IbuildControlsProps, Tcontrols } from './types/index';\r\n\r\nexport const controls: Tcontrols = [\r\n  { label: 'Salad', type: 'salad' },\r\n  { label: 'Bacon', type: 'bacon' },\r\n  { label: 'Cheese', type: 'cheese' },\r\n  { label: 'Meat', type: 'meat' },\r\n];\r\nconst buildControls: FunctionComponent<IbuildControlsProps> = ({\r\n  decrease,\r\n  increase,\r\n  ingredients,\r\n  price,\r\n  purchaseable,\r\n  purchaseStart,\r\n}) => {\r\n  return (\r\n    <div className={styles.BuildControls}>\r\n      <p>\r\n        Current Price: <strong>${price}</strong>\r\n      </p>\r\n      {controls.map(ctrl => (\r\n        <BuildControl\r\n          key={ctrl.label}\r\n          label={ctrl.label}\r\n          added={() => increase(ctrl.type)}\r\n          removed={() => decrease(ctrl.type)}\r\n          disabled={ingredients[ctrl.type] <= 0}\r\n        />\r\n      ))}\r\n      <button\r\n        onClick={purchaseStart}\r\n        className={styles.OrderButton}\r\n        disabled={!purchaseable}\r\n      >\r\n        ORDER NOW\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(buildControls);\r\n","import React, { Component, lazy } from 'react';\r\n\r\nimport axios from '../../axios-orders';\r\nimport Retry from '../../components/Retry/Retry';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport withErrorHandler from '../../HOCs/withErrorHandler';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport { connect } from 'react-redux';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport { IBurgerBuilderState } from './types/';\r\nimport {\r\n  fetchIngredientsHandler,\r\n  decreaseIngredient,\r\n  increaseIngredient,\r\n  setIngredients,\r\n  setAuthRedirectUrl,\r\n} from '../../store/reducers/actions';\r\nimport { GetConnectProps, IStore } from '../../store/';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport {\r\n  selectIngredientsError,\r\n  selectIngredients,\r\n  getPurchaseableFromStore,\r\n  getTotalPriceFromStore,\r\n  getAuthenticated,\r\n} from '../../store/selectors/selectors';\r\n\r\nconst BurgerDisplay = lazy(() =>\r\n  import(/* webpackChunkName: \"BurgerDisplay\", webpackPrefetch: true */\r\n  '../../components/Burger/BurgerDisplay/BurgerDisplay'),\r\n);\r\n\r\nconst OrderSummary = lazy(() =>\r\n  import(/* webpackChunkName: \"OrderSummary\", webpackPrefetch: true */ '../../components/OrderSummary/OrderSummary'),\r\n);\r\n\r\nconst offlineStyle = { color: 'blue', cursor: 'pointer' };\r\n/**\r\n * @class BurgerBuilder\r\n * @extends {Component<IconnectIngredientsProps<RouteComponentProps>, IBurgerBuilderState>}\r\n */\r\nclass BurgerBuilder extends Component<\r\n  IBurgerBuilderProps,\r\n  IBurgerBuilderState\r\n> {\r\n  public state: IBurgerBuilderState = {\r\n    purchasing: false,\r\n  };\r\n\r\n  public async componentDidMount() {\r\n    this.props.setAuthRedirectUrl('/');\r\n    this.props.ingredientSetHandler(null);\r\n    this.props.fetchIngredientsHandler();\r\n    setTimeout(() => {\r\n      import(/* webpackChunkName: \"Checkout\" */ '../Checkout/Checkout');\r\n    }, 10000);\r\n  }\r\n\r\n  public purchaseStartHandler = () => {\r\n    import(/* webpackChunkName: \"Checkout\" */ '../Checkout/Checkout');\r\n    this.setState({ purchasing: true });\r\n  };\r\n  public purchaseCancelHandler = () => {\r\n    this.setState({ purchasing: false });\r\n  };\r\n  public purchaseContinueHandler = () => {\r\n    if (!this.props.ingredients) {\r\n      return;\r\n    }\r\n    this.setState({ purchasing: false });\r\n    if (this.props.isAuth) {\r\n      this.props.history.push({\r\n        pathname: '/checkout',\r\n      });\r\n    } else {\r\n      this.props.setAuthRedirectUrl('/checkout');\r\n      this.props.history.push('/login');\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    let burger = this.props.error ? (\r\n      <Retry\r\n        retryHandler={this.props.fetchIngredientsHandler}\r\n        mainMessage=\"Ingredients Failed To Load. Please \"\r\n        additionalMessage={\r\n          <span style={offlineStyle} onClick={this.offline}>\r\n            work offline for now?\r\n          </span>\r\n        }\r\n      />\r\n    ) : (\r\n      <Loader />\r\n    );\r\n\r\n    let orderSummary = null;\r\n\r\n    if (this.props.ingredients) {\r\n      burger = (\r\n        <>\r\n          <React.Suspense fallback={<Loader />}>\r\n            <BurgerDisplay ingredients={this.props.ingredients} />\r\n          </React.Suspense>\r\n          <BuildControls\r\n            ingredients={this.props.ingredients}\r\n            price={this.props.totalPrice}\r\n            increase={this.props.ingredientIncreaseHandler}\r\n            decrease={this.props.ingredientDecreaseHandler}\r\n            purchaseable={this.props.purchaseable}\r\n            purchaseStart={this.purchaseStartHandler}\r\n          />\r\n        </>\r\n      );\r\n\r\n      orderSummary = (\r\n        <React.Suspense fallback={<Loader />}>\r\n          <OrderSummary\r\n            ingredients={this.props.ingredients}\r\n            totalCost={this.props.totalPrice}\r\n            purchaseCancel={this.purchaseCancelHandler}\r\n            purchaseContinue={this.purchaseContinueHandler}\r\n            isAuth={this.props.isAuth}\r\n          />\r\n        </React.Suspense>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Modal show={this.state.purchasing} hider={this.purchaseCancelHandler}>\r\n          {orderSummary}\r\n        </Modal>\r\n        {burger}\r\n      </>\r\n    );\r\n  }\r\n\r\n  private offline = () => {\r\n    this.props.ingredientSetHandler({\r\n      bacon: 0,\r\n      cheese: 0,\r\n      meat: 0,\r\n      salad: 0,\r\n    });\r\n  };\r\n}\r\n\r\nconst mapBurgerBuilderStateToProps = (state: IStore) => ({\r\n  error: selectIngredientsError(state),\r\n  ingredients: selectIngredients(state),\r\n  purchaseable: getPurchaseableFromStore(state),\r\n  totalPrice: getTotalPriceFromStore(state),\r\n  isAuth: getAuthenticated(state),\r\n});\r\n\r\nconst mapBurgerBuilderDispatchToProps = {\r\n  ingredientIncreaseHandler: increaseIngredient,\r\n  ingredientDecreaseHandler: decreaseIngredient,\r\n  ingredientSetHandler: setIngredients,\r\n  fetchIngredientsHandler,\r\n  setAuthRedirectUrl,\r\n};\r\n\r\nconst connectBurgerBuilder = connect(\r\n  mapBurgerBuilderStateToProps,\r\n  mapBurgerBuilderDispatchToProps,\r\n);\r\nexport type IBurgerBuilderProps = RouteComponentProps &\r\n  GetConnectProps<typeof connectBurgerBuilder>;\r\nexport default connectBurgerBuilder(withErrorHandler(BurgerBuilder, axios));\r\n"],"sourceRoot":""}