{"version":3,"sources":["components/OrderText/OrderText.tsx","components/CheckoutSummary/CheckoutSummary.tsx","containers/Checkout/Checkout.tsx"],"names":["StyledOrderText","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","target","name","styles","OrderText","_ref","ingredients","totalCost","totalCostPrefix","title","summary","entries","map","_ref2","_ref3","C_github_burger_builder_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","igKey","igVal","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","style","textTransform","key","display","minWidth","concat","fontWeight","BurgerDisplay","lazy","__webpack_require__","e","then","bind","StyledCheckoutSummary","styled_base_browser_esm","CheckoutSummary","checkoutCancel","checkoutContinue","purchasable","react_default","react","fallback","Loader","assign","Button","btnType","onClick","disabled","ContactData","SContactData","suspenseNode2","mapCheckoutDispatchToProps","setAuthRedirectUrl","submitBurgerOrder","connectIngredientsState","connect","state","purchaseable","getPurchaseableFromStore","submitting","selectBurgerOrderSubmitting","token","selectAuthIdToken","error","selectBurgerOrderError","userId","selectAuthUserId","props","useContext","IngredientsContext","totalPrice","isAuth","AuthContext","useCallback","history","push","setTimeout","match","path","Fragment","Route","render","p","objectSpread","components_CheckoutSummary_CheckoutSummary","Redirect","to"],"mappings":"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","file":"static/js/Checkout.a897e7d9.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react';\r\nimport styled from '@emotion/styled/macro';\r\nimport { IOrderTextProps } from './types';\r\n\r\nconst StyledOrderText = styled.div`\r\n  text-align: center;\r\n\r\n  div {\r\n    display: flex;\r\n    flex-flow: column;\r\n    align-items: center;\r\n    /* max-width: 10em;\r\n  margin: 0 auto; */\r\n  }\r\n\r\n  ul {\r\n    text-align: left;\r\n    /* min-width: 10em; */\r\n  }\r\n`;\r\n\r\n/**\r\n * Component that displays the individual ingredient costs\r\n * and total cost.\r\n * @implements IOrderTextProps\r\n */\r\nconst OrderText: FunctionComponent<IOrderTextProps> = ({\r\n  ingredients,\r\n  totalCost,\r\n  totalCostPrefix,\r\n  title,\r\n}) => {\r\n  const summary = Object.entries(ingredients).map(([igKey, igVal,]) => (\r\n    <li style={{ textTransform: 'capitalize' }} key={igKey}>\r\n      <span style={{ display: 'inline-block', minWidth: '3.7em' }}>\r\n        {igKey}:\r\n      </span>\r\n      {` ${igVal}`}\r\n    </li>\r\n  ));\r\n  return (\r\n    <StyledOrderText>\r\n      {title ? <h3 style={{ fontWeight: 'bold' }}>{title}</h3> : null}\r\n      <div>\r\n        <ul>{summary}</ul>\r\n      </div>\r\n      {totalCostPrefix ? (\r\n        <p style={{ fontWeight: 'bold' }}>\r\n          {totalCostPrefix} ${totalCost}\r\n        </p>\r\n      ) : null}\r\n    </StyledOrderText>\r\n  );\r\n};\r\n\r\nexport default OrderText;\r\n","import React, { FunctionComponent, lazy, Suspense } from 'react';\r\nimport Loader from '../UI/Loader/Loader';\r\nimport styled from '@emotion/styled/macro';\r\nimport { ICheckoutSummaryProps } from './types';\r\nimport OrderText from '../OrderText/OrderText';\r\nimport Button from '../UI/Button/Button';\r\n\r\nconst BurgerDisplay = lazy(() =>\r\n  import(/* webpackChunkName: \"BurgerDisplay\" */ '../Burger/BurgerDisplay/BurgerDisplay'),\r\n);\r\nconst StyledCheckoutSummary = styled.div`\r\n  /* max-width: 80%; */\r\n  text-align: center;\r\n  margin: auto;\r\n  /* \r\n  @media (min-width: 550px) {\r\n    max-width: 500px;\r\n  } */\r\n`;\r\nconst CheckoutSummary: FunctionComponent<ICheckoutSummaryProps> = ({\r\n  ingredients,\r\n  totalCost,\r\n  checkoutCancel,\r\n  checkoutContinue,\r\n  purchasable,\r\n}) => {\r\n  return (\r\n    <StyledCheckoutSummary>\r\n      <h3>We Hope You'll Enjoy This</h3>\r\n      <Suspense fallback={<Loader />}>\r\n        <BurgerDisplay {...{ ingredients }} />\r\n      </Suspense>\r\n      <OrderText\r\n        {...{ ingredients, totalCost }}\r\n        totalCostPrefix=\"The total cost of your order is\"\r\n      />\r\n      <div>\r\n        <Button btnType=\"Danger\" onClick={checkoutCancel}>\r\n          CANCEL\r\n        </Button>\r\n        <Button\r\n          disabled={!purchasable}\r\n          btnType=\"Success\"\r\n          onClick={checkoutContinue}\r\n        >\r\n          CONTINUE\r\n        </Button>\r\n      </div>\r\n    </StyledCheckoutSummary>\r\n  );\r\n};\r\n\r\nexport default CheckoutSummary;\r\n","import React, { lazy, FC, useCallback, useContext } from 'react';\r\nimport { Route, Redirect, RouteComponentProps } from 'react-router-dom';\r\nimport CheckoutSummary from '../../components/CheckoutSummary/CheckoutSummary';\r\nimport { connect } from 'react-redux';\r\nimport { GetConnectProps } from '../../store/types';\r\nimport {\r\n  getPurchaseableFromStore,\r\n  selectBurgerOrderSubmitting,\r\n  selectAuthIdToken,\r\n  selectBurgerOrderError,\r\n  selectAuthUserId,\r\n} from '../../store/selectors/selectors';\r\nimport { suspenseNode2 } from '../../HOCs/suspensed';\r\nimport { setAuthRedirectUrl, submitBurgerOrder } from '../../store/actions';\r\nimport { Store } from '../../store/store';\r\nimport { IngredientsContext, AuthContext } from '../App/App';\r\n\r\nconst ContactData = lazy(() =>\r\n  import(/* webpackChunkName: \"ContactData\", webpackPrefetch: true */ './ContactData/ContactData'),\r\n);\r\n\r\nconst SContactData = suspenseNode2(ContactData);\r\n\r\nconst Checkout: FC<ICheckoutProps> = props => {\r\n  const { ingredients, totalPrice } = useContext(IngredientsContext)!;\r\n  const isAuth = useContext(AuthContext);\r\n\r\n  const checkoutCancel = useCallback(() => {\r\n    props.history.push('/');\r\n  }, []);\r\n  const checkoutContinue = useCallback(() => {\r\n    setTimeout(() => import(/* webpackChunkName: \"Orders\" */ '../Orders/Orders'), 8000);\r\n    props.history.push(props.match.path + '/contact-data');\r\n  }, [props.match.path]);\r\n\r\n  return (\r\n    <div>\r\n      {ingredients && isAuth ? (\r\n        <>\r\n          <Route\r\n            path={props.match.path + '/contact-data'}\r\n            render={p =>\r\n              SContactData({\r\n                ...p,\r\n                ...{\r\n                  totalPrice,\r\n                  submitting: props.submitting,\r\n                  ingredients,\r\n                  token: props.token,\r\n                  error: props.error,\r\n                  userId: props.userId,\r\n                  submitBurgerOrder: props.submitBurgerOrder,\r\n                },\r\n              })\r\n            }\r\n          />\r\n          <CheckoutSummary\r\n            ingredients={ingredients}\r\n            totalCost={totalPrice}\r\n            checkoutCancel={checkoutCancel}\r\n            checkoutContinue={checkoutContinue}\r\n            purchasable={props.purchaseable}\r\n          />\r\n        </>\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapCheckoutStateToProps = (state: Store) => ({\r\n  purchaseable: getPurchaseableFromStore(state),\r\n  submitting: selectBurgerOrderSubmitting(state),\r\n  token: selectAuthIdToken(state),\r\n  error: selectBurgerOrderError(state),\r\n  userId: selectAuthUserId(state),\r\n});\r\n\r\nconst mapCheckoutDispatchToProps = { setAuthRedirectUrl, submitBurgerOrder };\r\n\r\nconst connectIngredientsState = connect(\r\n  mapCheckoutStateToProps,\r\n  mapCheckoutDispatchToProps,\r\n);\r\n\r\nexport type ICheckoutProps = RouteComponentProps & GetConnectProps<typeof connectIngredientsState>;\r\n\r\nexport default connectIngredientsState(Checkout);\r\n"],"sourceRoot":""}