{"version":3,"sources":["components/Order/Order.tsx","components/Swipe-list/swipeableListItem.tsx","containers/Orders/Orders.tsx"],"names":["StyledOrder","Object","styled_base_browser_esm","target","name","styles","Order","_ref","ingredients","totalPrice","id","breakdown","useMemo","entries","map","_ref2","_ref3","slicedToArray","igKey","igVal","react_default","a","createElement","className","key","INGREDIENT_PRICES","Fragment","toFixed","concat","base","Wrapper","props","wrapperHeight","bgOpacity","listTransform","listOpacity","initialState","leftX","maxHeight","listElClasses","createSlice","cases","setLeftX","state","updateOpacity","newOpacity","Math","abs","toString","setMaxHeight","height","setListElClasses","classes","reducer","actions","SwipeableListItem","children","_ref$threshold","threshold","onSwipe","_useReducer","useReducer","_useReducer2","_useReducer2$","dispatch","dragStartX","useRef","leftXRef","current","dragged","listElement","onDragStart","useCallback","clientX","onMouseMove","evt","newLeftX","onTouchMove","targetTouches","onDragStartMouse","window","addEventListener","onDragStartTouch","touch","onDragEnd","Error","offsetWidth","onDragEndMouse","removeEventListener","onDragEndTouch","useEffect","ref","onMouseDown","func","mapOrdersDispatchToProps","fetchOrders","connectOrders","connect","formattedOrders","getFormattedOrders","loading","selectOrdersLoading","error","selectOrdersError","errorMessage","getOrdersErrorMessage","token","selectAuthIdToken","userId","selectAuthUserId","withErrorHandler","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","t0","console","__webpack_require__","e","then","bind","finish","stop","this","allOrders","Loader","length","customer","_index","_array","swipeableListItem","components_Order_Order","Orders_styles","axios"],"mappings":"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","file":"static/js/Orders.d9395abc.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\r\nimport React, { FunctionComponent, useMemo } from 'react';\r\nimport { INGREDIENT_PRICES } from '../../shared/getTotalPrice';\r\nimport { Iingredients, IingredientsKeys } from '../../types/ingredients';\r\n// import styled from 'styled-components/macro';\r\n// tslint:disable-next-line:no-unused-expression\r\n// jsx;\r\nconst StyledOrder = styled.div`\r\n  & {\r\n    text-align: center;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    box-shadow: 0px 0px 10px 1px rgba(0, 0, 0, 0.658);\r\n    margin: 15px;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: center;\r\n  }\r\n\r\n  .Breakdown {\r\n    text-transform: capitalize;\r\n    flex: 0.4 0.02 42%;\r\n    margin: 5px 5px;\r\n    padding: 1px;\r\n    border: 1px solid rgba(0, 0, 0, 0.226);\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 4px 1px rgba(0, 0, 0, 0.459);\r\n    background-color: rgba(169, 169, 169, 0.13);\r\n  }\r\n  h4,\r\n  h5 {\r\n    flex: 1 1 100%;\r\n  }\r\n  p {\r\n    flex: 1 1 100%;\r\n    margin: 5px 0;\r\n\r\n    @media (min-width: 500px) {\r\n      .Breakdown {\r\n        flex: 0.4 0.02 4.95rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\ninterface OrdersProps {\r\n  ingredients: Iingredients;\r\n  name: string;\r\n  totalPrice: string;\r\n  id: string;\r\n}\r\n\r\nconst Order: FunctionComponent<OrdersProps> = ({ ingredients, totalPrice, name, id }) => {\r\n  const breakdown = useMemo(\r\n    () =>\r\n      (Object.entries(ingredients) as Array<[IingredientsKeys, number]>).map(([igKey, igVal]) => (\r\n        <span className=\"Breakdown\" key={id + igKey + igVal}>\r\n          {igKey} - {igVal}\r\n          <br />\r\n          {igVal * INGREDIENT_PRICES[igKey] > 0 ? (\r\n            <>${(igVal * INGREDIENT_PRICES[igKey]).toFixed(2)}</>\r\n          ) : (\r\n            <>N/A</>\r\n          )}\r\n        </span>\r\n      )),\r\n    [ingredients, id],\r\n  );\r\n  return (\r\n    <StyledOrder>\r\n      <h4>{`Name: ${name}`}</h4>\r\n      {breakdown}\r\n      <p>Base Cost: ${INGREDIENT_PRICES.base.toFixed(2)}</p>\r\n      <h5>Total Cost: ${totalPrice}</h5>\r\n    </StyledOrder>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React, { useEffect, useCallback, useReducer } from 'react';\r\nimport styled from '@emotion/styled/macro';\r\nimport { useRef } from 'react';\r\n// import { useStateRefs } from '../../shared/CustomHooks';\r\nimport { createSlice } from '@redux-ts-starter-kit/core';\r\n\r\ninterface WrapperProps {\r\n  listTransform: string | number;\r\n  bgOpacity: string | number;\r\n  wrapperHeight: string | number;\r\n  listOpacity: string | number;\r\n}\r\n\r\nconst Wrapper = styled.div<WrapperProps>`\r\n  & {\r\n    position: relative;\r\n    transition: max-height 0.5s ease;\r\n    max-height: ${props => props.wrapperHeight}px;\r\n    transform-origin: top;\r\n    overflow: hidden;\r\n    width: 100%;\r\n  }\r\n  & > .Bouncing {\r\n    transition: transform 0.5s ease-out;\r\n  }\r\n  & > .Background {\r\n    opacity: ${props => props.bgOpacity};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: -1;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    padding-right: 16px;\r\n    color: white;\r\n    background-color: #663bb7;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  & > .ListItem {\r\n    transform: translateX(${props => props.listTransform}px);\r\n    opacity: ${props => props.listOpacity};\r\n    width: 100%;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    background-color: #fff;\r\n    height: 100%;\r\n    display: flex;\r\n  }\r\n`;\r\ninterface SwipeableListItemProps {\r\n  threshold?: number;\r\n  onSwipe: () => void;\r\n}\r\n\r\nconst initialState = {\r\n  leftX: 0,\r\n  bgOpacity: '0',\r\n  maxHeight: '10000',\r\n  listElClasses: 'ListItem',\r\n};\r\n\r\nconst { reducer, actions } = createSlice({\r\n  initialState,\r\n  cases: {\r\n    setLeftX: (state, leftX: number) => {\r\n      state.leftX = leftX;\r\n    },\r\n    updateOpacity: state => {\r\n      const newOpacity = +(Math.abs(state.leftX) / 100).toFixed(2);\r\n      if (newOpacity < 1 && newOpacity.toString() !== state.bgOpacity) {\r\n        state.bgOpacity = newOpacity.toString();\r\n      } else if (newOpacity >= 1) {\r\n        state.bgOpacity = '1';\r\n      }\r\n    },\r\n    setMaxHeight: (state, height: string) => {\r\n      state.maxHeight = height;\r\n    },\r\n    setListElClasses: (state, classes: string) => {\r\n      state.listElClasses = classes;\r\n    },\r\n  },\r\n});\r\n\r\nconst SwipeableListItem: React.FC<SwipeableListItemProps> = ({\r\n  children,\r\n  threshold = 0.35,\r\n  onSwipe,\r\n}) => {\r\n  const [{ leftX, bgOpacity, listElClasses, maxHeight }, dispatch] = useReducer(\r\n    reducer,\r\n    initialState,\r\n  );\r\n  const dragStartX = useRef(0);\r\n  const leftXRef = useRef(leftX);\r\n  leftXRef.current = leftX;\r\n  const dragged = useRef(false);\r\n  // const fpsInterval = useRef(1000 / 60);\r\n  const listElement = useRef<HTMLDivElement>(null);\r\n  // const wrapper = useRef<HTMLDivElement>(null);\r\n  // const background = useRef<HTMLDivElement>(null);\r\n\r\n  const onDragStart = useCallback((clientX: number) => {\r\n    dragStartX.current = clientX;\r\n    dragged.current = true;\r\n    dispatch(actions.setListElClasses('ListItem'));\r\n  }, []);\r\n\r\n  const onMouseMove = useCallback((evt: MouseEvent) => {\r\n    // console.log(evt.clientX, dragStartX.current);\r\n    const newLeftX = evt.clientX - dragStartX.current;\r\n    // console.log(left);\r\n    if (newLeftX < 0) {\r\n      dispatch(actions.setLeftX(newLeftX));\r\n    }\r\n    dispatch(actions.updateOpacity());\r\n  }, []);\r\n  const onTouchMove = useCallback((evt: TouchEvent) => {\r\n    const touch = evt.targetTouches[0];\r\n    const newLeftX = touch.clientX - dragStartX.current;\r\n    if (newLeftX < 0) {\r\n      dispatch(actions.setLeftX(newLeftX));\r\n    }\r\n    dispatch(actions.updateOpacity());\r\n  }, []);\r\n\r\n  const onDragStartMouse = useCallback(\r\n    (evt: React.MouseEvent<HTMLDivElement>) => {\r\n      onDragStart(evt.clientX);\r\n      window.addEventListener('mousemove', onMouseMove);\r\n    },\r\n    [onDragStart, onMouseMove],\r\n  );\r\n  const onDragStartTouch = useCallback(\r\n    (evt: React.TouchEvent<HTMLDivElement>) => {\r\n      const touch = evt.targetTouches[0];\r\n      onDragStart(touch.clientX);\r\n      window.addEventListener('touchmove', onTouchMove);\r\n    },\r\n    [onDragStart, onTouchMove],\r\n  );\r\n\r\n  const onDragEnd = useCallback(() => {\r\n    if (dragged.current) {\r\n      dragged.current = false;\r\n      if (listElement.current === null) {\r\n        throw new Error('listElement ref is `null`');\r\n      }\r\n      if (leftXRef.current < -1 * listElement.current.offsetWidth * threshold) {\r\n        dispatch(actions.setLeftX(-1 * listElement.current.offsetWidth * 2));\r\n        onSwipe();\r\n        dispatch(actions.setMaxHeight('0'));\r\n      } else {\r\n        dispatch(actions.setLeftX(0));\r\n        dispatch(actions.updateOpacity());\r\n      }\r\n      dispatch(actions.setListElClasses('ListItem Bouncing'));\r\n    }\r\n  }, [threshold, onSwipe]);\r\n  const onDragEndMouse = useCallback(() => {\r\n    window.removeEventListener('mousemove', onMouseMove);\r\n    onDragEnd();\r\n  }, [onMouseMove, onDragEnd]);\r\n  const onDragEndTouch = useCallback(() => {\r\n    window.removeEventListener('touchmove', onTouchMove);\r\n    onDragEnd();\r\n  }, [onTouchMove, onDragEnd]);\r\n  useEffect(() => {\r\n    window.addEventListener('mouseup', onDragEndMouse);\r\n    window.addEventListener('touchend', onDragEndTouch);\r\n    return () => {\r\n      window.removeEventListener('mouseup', onDragEndMouse);\r\n      window.removeEventListener('touchend', onDragEndTouch);\r\n    };\r\n  }, [onDragEndMouse, onDragEndTouch]);\r\n\r\n  return (\r\n    <Wrapper\r\n      bgOpacity={bgOpacity}\r\n      listTransform={leftX}\r\n      listOpacity={1.8 - +bgOpacity}\r\n      wrapperHeight={maxHeight} /* ref={wrapper} */\r\n    >\r\n      <div className=\"Background\" /* ref={background} */>\r\n        <span>Delete</span>\r\n      </div>\r\n      <div\r\n        className={listElClasses}\r\n        ref={listElement}\r\n        onMouseDown={onDragStartMouse}\r\n        onTouchMove={onDragStartTouch}\r\n      >\r\n        {children}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SwipeableListItem;\r\n","import React, { FC, useEffect } from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport withErrorHandler from '../../HOCs/withErrorHandler';\r\nimport { StyledOrders } from './Orders.styles';\r\nimport { IformattedOrder as FormattedOrder } from '../../store/reducers/ordersReducer/types';\r\nimport { GetConnectProps } from '../../store/types';\r\nimport {\r\n  getFormattedOrders,\r\n  selectOrdersLoading,\r\n  selectOrdersError,\r\n  selectAuthIdToken,\r\n  getOrdersErrorMessage,\r\n  selectAuthUserId,\r\n} from '../../store/selectors/selectors';\r\nimport { connect } from 'react-redux';\r\nimport { fetchOrders } from '../../store/actions';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Store } from '../../store/store';\r\nimport SwipeableListItem from '../../components/Swipe-list/swipeableListItem';\r\nconst func = () => {};\r\nconst Orders: FC<OrdersProps> = props => {\r\n  const generateOrderBlock = (\r\n    customer: FormattedOrder,\r\n    _index: number,\r\n    _array: FormattedOrder[],\r\n  ) => {\r\n    return (\r\n      <div className=\"OrderWrapper\" key={customer.id}>\r\n        {/* tslint:disable-next-line: no-empty */}\r\n        <SwipeableListItem onSwipe={func}>\r\n          <Order {...customer} />\r\n        </SwipeableListItem>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        await props.fetchOrders(props.token, props.userId);\r\n      } catch (error) {\r\n        // tslint:disable-next-line:no-console\r\n        console.error('[fetchOrders(Orders)]', error);\r\n      } finally {\r\n        import(/* webpackChunkName: \"BurgerBuilder\" */ '../BurgerBuilder/BurgerBuilder');\r\n      }\r\n    })();\r\n  }, [props.fetchOrders, props.token, props.userId]); // eslint-disable-line\r\n\r\n  const allOrders = props.errorMessage ? (\r\n    <div>\r\n      <p>{props.errorMessage}</p>\r\n    </div>\r\n  ) : props.loading ? (\r\n    <Loader />\r\n  ) : props.formattedOrders.length > 0 ? (\r\n    props.formattedOrders.map(generateOrderBlock)\r\n  ) : (\r\n    <div>\r\n      <p>Your order history is blank.</p>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <StyledOrders>\r\n      <h3>Here Are Your Orders</h3>\r\n      <div className=\"OrderBox\">{allOrders}</div>\r\n    </StyledOrders>\r\n  );\r\n};\r\n\r\nconst mapOrderStateToProps = (state: Store) => {\r\n  return {\r\n    formattedOrders: getFormattedOrders(state),\r\n    loading: selectOrdersLoading(state),\r\n    error: selectOrdersError(state),\r\n    errorMessage: getOrdersErrorMessage(state),\r\n    token: selectAuthIdToken(state),\r\n    userId: selectAuthUserId(state),\r\n  };\r\n};\r\nconst mapOrdersDispatchToProps = { fetchOrders };\r\n\r\nconst connectOrders = connect(\r\n  mapOrderStateToProps,\r\n  mapOrdersDispatchToProps,\r\n);\r\n\r\nexport type OrdersProps = RouteComponentProps & GetConnectProps<typeof connectOrders>;\r\nexport default connectOrders(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}