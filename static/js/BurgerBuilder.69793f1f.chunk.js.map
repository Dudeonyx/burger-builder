{"version":3,"sources":["components/Burger/BuildControls/BuildControl/BuildControl.tsx","components/Burger/BuildControls/BuildControls.tsx","containers/BurgerBuilder/BurgerBuilder.tsx"],"names":["StyledBuildControl","Object","styled_base_browser_esm","target","name","styles","BuildControl","_ref","added","disabled","label","removed","react_default","a","createElement","className","onClick","controls","type","StyledBuildControls","memo","decrease","increase","ingredients","price","purchaseable","purchaseStart","map","ctrl","BuildControls_BuildControl_BuildControl","key","BurgerDisplay","lazy","__webpack_require__","e","then","bind","OrderSummary","offlineStyle","color","cursor","mapBurgerBuilderDispatchToProps","ingredientIncreaseHandler","increaseIngredient","ingredientDecreaseHandler","decreaseIngredient","ingredientSetHandler","setIngredients","fetchIngredientsHandler","setAuthRedirectUrl","connectBurgerBuilder","connect","state","error","selectIngredientsError","getPurchaseableFromStore","withErrorHandler","props","_useState","useState","_useState2","slicedToArray","purchasing","setPurchasing","isAuth","useContext","AuthContext","IngredientsContext","totalPrice","useEffect","setTimeout","purchaseStartHandler","useCallback","purchaseCancelHandler","purchaseContinueHandler","history","push","pathname","offline","bacon","cheese","meat","salad","burger","Retry","retryHandler","mainMessage","additionalMessage","style","Loader","orderSummary","Fragment","Suspense","fallback","BuildControls","totalCost","purchaseCancel","purchaseContinue","Modal","show","hider","axios"],"mappings":"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","file":"static/js/BurgerBuilder.69793f1f.chunk.js","sourcesContent":["import React, { FunctionComponent, MouseEventHandler } from 'react';\r\nimport styled from '@emotion/styled/macro';\r\n\r\n\r\nconst StyledBuildControl = styled.div`\r\n& {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin: 2px 0;\r\n    --width: 50px\r\n}\r\n\r\n& button {\r\n    display: block;\r\n    font: inherit;\r\n    padding: 5px;\r\n    margin: 0 5px;\r\n    border: 1px solid #AA6817;\r\n    cursor: pointer;\r\n    outline: none;\r\n    width: var(--width);\r\n}\r\n\r\n& button:disabled {\r\n    background-color: #AC9980;\r\n    border: 1px solid #7E7365;\r\n    color: #ccc;\r\n    cursor: default;\r\n}\r\n\r\n& button:hover:disabled {\r\n    background-color: #AC9980;\r\n    color: #ccc;\r\n    cursor: not-allowed;\r\n}\r\n\r\n.Label {\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    width: var(--width);\r\n}\r\n\r\n& .Less {  \r\n    background-color: #D39952;\r\n    color: white;\r\n}\r\n\r\n& .More {\r\n    background-color: #8F5E1E;\r\n    color: white;\r\n}\r\n\r\n& .Less:hover, & .Less:active {  \r\n    background-color: #DAA972;\r\n    color: white;\r\n}\r\n\r\n& .More:hover,& .More:active {\r\n    background-color: #99703F;\r\n    color: white;\r\n}\r\n@media (min-width: 320px) {\r\n    .Label, & button {\r\n        width: 80px;\r\n    }\r\n}\r\n`\r\n\r\nexport interface IBuildControlProps {\r\n  removed: MouseEventHandler;\r\n  disabled: boolean;\r\n  label: string;\r\n  added: MouseEventHandler;\r\n}\r\nconst BuildControl: FunctionComponent<IBuildControlProps> = ({\r\n  added,\r\n  disabled,\r\n  label,\r\n  removed,\r\n}) => {\r\n  return (\r\n    <StyledBuildControl>\r\n      <div className=\"Label\">{label}</div>\r\n      <button onClick={removed} className=\"Less\" disabled={disabled}>\r\n        Less\r\n      </button>\r\n      <button onClick={added} className=\"More\">\r\n        More\r\n      </button>\r\n    </StyledBuildControl>\r\n  );\r\n};\r\n\r\nexport default BuildControl;\r\n","import React, { FunctionComponent, memo } from 'react';\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport { IbuildControlsProps, Tcontrols } from './types/';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nconst controls: Tcontrols = [\r\n  { label: 'Salad', type: 'salad' },\r\n  { label: 'Bacon', type: 'bacon' },\r\n  { label: 'Cheese', type: 'cheese' },\r\n  { label: 'Meat', type: 'meat' },\r\n];\r\n\r\nconst StyledBuildControls = styled.div`\r\n  & {\r\n    width: 100%;\r\n    background-color: #cf8f2e;\r\n    display: flex;\r\n    flex-flow: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-shadow: 0 2px 1px #ccc;\r\n    margin: auto;\r\n    padding: 10px 0;\r\n    /* font-size: 0.9rem; */\r\n  }\r\n  & p {\r\n    margin: 10px 0;\r\n  }\r\n  .OrderButton {\r\n    background-color: #becf2d;\r\n    padding: 10px;\r\n    border-radius: 4px;\r\n    outline: none;\r\n    border: none;\r\n    color: #7c581c;\r\n    font-size: 1.05rem;\r\n    box-shadow: 1px 1px 1px 1px #727c1b;\r\n    font-weight: 400;\r\n  }\r\n\r\n  .OrderButton:hover,\r\n  .OrderButton:active {\r\n    background-color: #d2dd6c;\r\n    /* background-color: rgb(226, 19, 19); */\r\n    /* color: #cf8f2e; */\r\n    box-shadow: 1px 1px 1px 1px #393e0e;\r\n  }\r\n\r\n  .OrderButton:disabled {\r\n    cursor: not-allowed;\r\n    color: gray;\r\n    background-color: darkgray;\r\n    box-shadow: 1px 1px 1px 1px gray;\r\n    animation: disable 0.4s linear;\r\n  }\r\n\r\n  .OrderButton:not(:disabled) {\r\n    animation: enable 0.3s linear;\r\n  }\r\n\r\n  @keyframes enable {\r\n    0% {\r\n      transform: scale(1);\r\n    }\r\n    33% {\r\n      transform: scale(1.05);\r\n    }\r\n    50% {\r\n      transform: scale(1.1);\r\n    }\r\n    66% {\r\n      transform: scale(1.05);\r\n    }\r\n    100% {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n  @keyframes disable {\r\n    0% {\r\n      transform: scale(1);\r\n    }\r\n    33% {\r\n      transform: scale(0.92);\r\n    }\r\n    50% {\r\n      transform: scale(0.86);\r\n    }\r\n    66% {\r\n      transform: scale(0.92);\r\n    }\r\n    100% {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n`;\r\nconst buildControls: FunctionComponent<IbuildControlsProps> = ({\r\n  decrease,\r\n  increase,\r\n  ingredients,\r\n  price,\r\n  purchaseable,\r\n  purchaseStart,\r\n}) => {\r\n  return (\r\n    <StyledBuildControls>\r\n      <p>\r\n        Current Price: <strong>${price}</strong>\r\n      </p>\r\n      {controls.map(ctrl => (\r\n        <BuildControl\r\n          key={ctrl.label}\r\n          label={ctrl.label}\r\n          added={() => increase(ctrl.type)}\r\n          removed={() => decrease(ctrl.type)}\r\n          disabled={ingredients[ctrl.type] <= 0}\r\n        />\r\n      ))}\r\n      <button\r\n        onClick={purchaseStart}\r\n        className=\"OrderButton\"\r\n        disabled={!purchaseable}\r\n      >\r\n        ORDER NOW\r\n      </button>\r\n    </StyledBuildControls>\r\n  );\r\n};\r\n\r\nexport default memo(buildControls);\r\n","import React, { lazy, FC, useState, useEffect, useCallback, useContext } from 'react';\r\n\r\nimport axios from '../../axios-orders';\r\nimport Retry from '../../components/Retry/Retry';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport withErrorHandler from '../../HOCs/withErrorHandler';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport { connect } from 'react-redux';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport {\r\n  fetchIngredientsHandler,\r\n  decreaseIngredient,\r\n  increaseIngredient,\r\n  setIngredients,\r\n  setAuthRedirectUrl,\r\n} from '../../store/actions';\r\nimport { GetConnectProps, Store } from '../../store/';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { selectIngredientsError, getPurchaseableFromStore } from '../../store/selectors/selectors';\r\nimport { AuthContext, IngredientsContext } from '../App/App';\r\n\r\nconst BurgerDisplay = lazy(() =>\r\n  import(/* webpackChunkName: \"BurgerDisplay\", webpackPrefetch: true */\r\n  '../../components/Burger/BurgerDisplay/BurgerDisplay'),\r\n);\r\n\r\nconst OrderSummary = lazy(() =>\r\n  import(/* webpackChunkName: \"OrderSummary\", webpackPrefetch: true */ '../../components/OrderSummary/OrderSummary'),\r\n);\r\n\r\nconst offlineStyle = { color: 'blue', cursor: 'pointer' };\r\n\r\nconst BurgerBuilder: FC<IBurgerBuilderProps> = props => {\r\n  const [purchasing, setPurchasing] = useState(false);\r\n\r\n  const isAuth = useContext(AuthContext);\r\n  const { ingredients, totalPrice } = useContext(IngredientsContext)!;\r\n\r\n  useEffect(() => {\r\n    props.setAuthRedirectUrl('/');\r\n    props.ingredientSetHandler(null);\r\n    props.fetchIngredientsHandler();\r\n    setTimeout(() => {\r\n      import(/* webpackChunkName: \"Checkout\" */ '../Checkout/Checkout');\r\n    }, 10000);\r\n  }, []);\r\n\r\n  const purchaseStartHandler = useCallback(() => {\r\n    import(/* webpackChunkName: \"Checkout\" */ '../Checkout/Checkout');\r\n    setPurchasing(true);\r\n  }, []);\r\n  const purchaseCancelHandler = useCallback(() => {\r\n    setPurchasing(false);\r\n  }, []);\r\n  const purchaseContinueHandler = useCallback(() => {\r\n    if (!ingredients) {\r\n      return;\r\n    }\r\n    setPurchasing(false);\r\n    if (isAuth) {\r\n      props.history.push({\r\n        pathname: '/checkout',\r\n      });\r\n    } else {\r\n      props.setAuthRedirectUrl('/checkout');\r\n      props.history.push('/login');\r\n    }\r\n  }, [ingredients, isAuth]);\r\n\r\n  const offline = useCallback(() => {\r\n    props.ingredientSetHandler({\r\n      bacon: 0,\r\n      cheese: 0,\r\n      meat: 0,\r\n      salad: 0,\r\n    });\r\n  }, []);\r\n\r\n  let burger = props.error ? (\r\n    <Retry\r\n      retryHandler={props.fetchIngredientsHandler}\r\n      mainMessage=\"Ingredients Failed To Load. Please \"\r\n      additionalMessage={\r\n        <span style={offlineStyle} onClick={offline}>\r\n          work offline for now?\r\n        </span>\r\n      }\r\n    />\r\n  ) : (\r\n    <Loader />\r\n  );\r\n\r\n  let orderSummary = null;\r\n\r\n  if (ingredients) {\r\n    burger = (\r\n      <>\r\n        <React.Suspense fallback={<Loader />}>\r\n          <BurgerDisplay ingredients={ingredients} />\r\n        </React.Suspense>\r\n        <BuildControls\r\n          ingredients={ingredients}\r\n          price={totalPrice}\r\n          increase={props.ingredientIncreaseHandler}\r\n          decrease={props.ingredientDecreaseHandler}\r\n          purchaseable={props.purchaseable}\r\n          purchaseStart={purchaseStartHandler}\r\n        />\r\n      </>\r\n    );\r\n\r\n    orderSummary = (\r\n      <React.Suspense fallback={<Loader />}>\r\n        <OrderSummary\r\n          ingredients={ingredients}\r\n          totalCost={totalPrice}\r\n          purchaseCancel={purchaseCancelHandler}\r\n          purchaseContinue={purchaseContinueHandler}\r\n          isAuth={isAuth}\r\n        />\r\n      </React.Suspense>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={purchasing} hider={purchaseCancelHandler}>\r\n        {orderSummary}\r\n      </Modal>\r\n      {burger}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapBurgerBuilderStateToProps = (state: Store) => ({\r\n  error: selectIngredientsError(state),\r\n  purchaseable: getPurchaseableFromStore(state),\r\n});\r\n\r\nconst mapBurgerBuilderDispatchToProps = {\r\n  ingredientIncreaseHandler: increaseIngredient,\r\n  ingredientDecreaseHandler: decreaseIngredient,\r\n  ingredientSetHandler: setIngredients,\r\n  fetchIngredientsHandler,\r\n  setAuthRedirectUrl,\r\n};\r\n\r\nconst connectBurgerBuilder = connect(\r\n  mapBurgerBuilderStateToProps,\r\n  mapBurgerBuilderDispatchToProps,\r\n);\r\nexport type IBurgerBuilderProps = RouteComponentProps &\r\n  GetConnectProps<typeof connectBurgerBuilder>;\r\nexport default connectBurgerBuilder(withErrorHandler(BurgerBuilder, axios));\r\n"],"sourceRoot":""}