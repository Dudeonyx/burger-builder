{"version":3,"sources":["axios-orders.tsx","containers/BurgerBuilder/BurgerBuilder.tsx"],"names":["axiosOrderInstance","axios","create","baseURL","BurgerDisplay","lazy","__webpack_require__","e","then","bind","BuildControls","Modal","OrderSummary","INGREDIENT_PRICES","salad","cheese","bacon","meat","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","orders","updatePurchasable","status","Object","values","some","igVal","_this","setState","ingredientIncreaseHandler","type","newIngredients","objectSpread","newTotalPrice","ingredientDecreaseHandler","purchaseStartHandler","purchaseCancelHandler","purchaseContinueHandler","_callee","order","response","regenerator_default","a","wrap","_context","prev","next","generateOrder","post","sent","console","log","prevState","concat","data","name","t0","finish","stop","this","customer","address","street","city","country","phone","areaCode","email","deliveryMethod","price","orderSummary","react_default","createElement","Loader","Suspense","fallback","purchaseCancel","purchaseContinue","show","hider","increase","decrease","purchaseStart","Component"],"mappings":"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","file":"static/js/BurgerBuilder.12ceb9ba.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst axiosOrderInstance = axios.create( {\r\n  baseURL: 'https://react-burger-builder-8d6de.firebaseio.com/',\r\n} );\r\n\r\nexport default axiosOrderInstance;\r\n","import React, { Component, lazy } from 'react';\r\n\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport axios from '../../axios-orders';\r\n\r\nconst BurgerDisplay = lazy( () =>\r\n  import( /* webpackChunkName: \"BurgerDisplay\" */\r\n  '../../components/Burger/BurgerDisplay/BurgerDisplay' ),\r\n);\r\nconst BuildControls = lazy( () =>\r\n  import( /* webpackChunkName: \"BuildControls\" */\r\n  '../../components/Burger/BuildControls/BuildControls' ),\r\n);\r\nconst Modal = lazy( () =>\r\n  import( /* webpackChunkName: \"Modal\" */ '../../components/UI/Modal/Modal' ),\r\n);\r\nconst OrderSummary = lazy( () =>\r\n  import( /* webpackChunkName: \"OrderSummary\" */ '../../components/OrderSummary/OrderSummary' ),\r\n);\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  cheese: 0.6,\r\n  bacon: 0.8,\r\n  meat: 1.4,\r\n};\r\ninterface IBurgerBuilderState {\r\n  ingredients: Iingredients;\r\n  totalPrice: number;\r\n  purchasable: boolean;\r\n  purchasing: boolean;\r\n  loading: boolean;\r\n  orders: string[];\r\n}\r\ninterface Iingredients {\r\n  salad: number;\r\n  bacon: number;\r\n  cheese: number;\r\n  meat: number;\r\n}\r\nclass BurgerBuilder extends Component<{}, IBurgerBuilderState> {\r\n  state = {\r\n    ingredients: {\r\n      salad: 0,\r\n      bacon: 0,\r\n      cheese: 0,\r\n      meat: 0,\r\n    },\r\n    totalPrice: 4,\r\n    purchasable: false,\r\n    purchasing: false,\r\n    loading: false,\r\n    orders: [],\r\n  };\r\n\r\n  updatePurchasable = ( ingredients: Iingredients ) => {\r\n    const status = Object.values( ingredients ).some( igVal => igVal !== 0 );\r\n    this.setState( {\r\n      purchasable: status,\r\n    } );\r\n  }\r\n\r\n  ingredientIncreaseHandler = ( type: keyof Iingredients ): void => {\r\n    const newIngredients = { ...this.state.ingredients };\r\n    newIngredients[type] += 1;\r\n    const newTotalPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\r\n    this.setState( {\r\n      ingredients: newIngredients,\r\n      totalPrice: newTotalPrice,\r\n    } );\r\n    this.updatePurchasable( newIngredients );\r\n  }\r\n  ingredientDecreaseHandler = ( type: keyof Iingredients ) => {\r\n    if ( this.state.ingredients[type] <= 0 ) return;\r\n    const newIngredients = { ...this.state.ingredients };\r\n    newIngredients[type] -= 1;\r\n    const newTotalPrice = this.state.totalPrice - INGREDIENT_PRICES[type];\r\n    this.setState( {\r\n      ingredients: newIngredients,\r\n      totalPrice: newTotalPrice,\r\n    } );\r\n    this.updatePurchasable( newIngredients );\r\n  }\r\n\r\n  purchaseStartHandler = () => {\r\n    this.setState( { purchasing: true } );\r\n  }\r\n  purchaseCancelHandler = () => {\r\n    this.setState( { purchasing: false } );\r\n  }\r\n  purchaseContinueHandler = async () => {\r\n    try {\r\n      this.setState( { loading: true } );\r\n      const order = this.generateOrder();\r\n      const response = await axios.post( '/orders.json', order );\r\n      console.log( response );\r\n      this.setState( prevState => ( {\r\n        orders: prevState.orders.concat( response.data.name ),\r\n      } ) );\r\n    } catch ( error ) {\r\n      console.log( error );\r\n    } finally {\r\n      this.setState( { purchasing: false, loading: false } );\r\n    }\r\n  }\r\n\r\n  generateOrder() {\r\n    return {\r\n      customer: {\r\n        name: 'OnyekaChukwu',\r\n        address: {\r\n          street: 'Adjenughure Street',\r\n          city: 'Effural',\r\n          state: 'Selta',\r\n          country: 'Nier',\r\n        },\r\n        phone: '123-255-8416',\r\n        areaCode: '+56',\r\n        email: 'test@testing.on',\r\n      },\r\n      deliveryMethod: 'cheapest',\r\n      ingredients: this.state.ingredients,\r\n      price: this.state.totalPrice,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const orderSummary = this.state.loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <React.Suspense fallback={<Loader />}>\r\n        <OrderSummary\r\n          ingredients={this.state.ingredients}\r\n          price={this.state.totalPrice}\r\n          purchaseCancel={this.purchaseCancelHandler}\r\n          purchaseContinue={this.purchaseContinueHandler}\r\n        />\r\n      </React.Suspense>\r\n    );\r\n    return (\r\n      <React.Suspense fallback={<Loader />}>\r\n        <Modal show={this.state.purchasing} hider={this.purchaseCancelHandler}>\r\n          {orderSummary}\r\n        </Modal>\r\n        <React.Suspense fallback={<Loader />}>\r\n          <BurgerDisplay ingredients={this.state.ingredients} />\r\n        </React.Suspense>\r\n        <React.Suspense fallback={<Loader />}>\r\n          <BuildControls\r\n            ingredients={this.state.ingredients}\r\n            price={this.state.totalPrice}\r\n            increase={this.ingredientIncreaseHandler}\r\n            decrease={this.ingredientDecreaseHandler}\r\n            purchasable={this.state.purchasable}\r\n            purchaseStart={this.purchaseStartHandler}\r\n          />\r\n        </React.Suspense>\r\n      </React.Suspense>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BurgerBuilder;\r\n"],"sourceRoot":""}