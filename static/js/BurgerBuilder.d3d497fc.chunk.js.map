{"version":3,"sources":["components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Burger/BuildControls/BuildControls.module.css","components/Burger/BuildControls/BuildControl/BuildControl.tsx","components/Burger/BuildControls/BuildControls.tsx","containers/BurgerBuilder/BurgerBuilder.tsx"],"names":["module","exports","BuildControl","Label","Less","More","BuildControls","OrderButton","disable","enable","_ref","added","disabled","label","removed","react_default","a","createElement","className","styles","onClick","controls","type","memo","decrease","increase","ingredients","price","purchaseable","purchaseStart","disabledCheck","bacon","cheese","meat","salad","Object","entries","forEach","_ref2","_ref3","slicedToArray","key","value","map","ctrl","BuildControls_BuildControl_BuildControl","BurgerDisplay","lazy","__webpack_require__","e","then","bind","OrderSummary","BurgerBuilder","state","purchasing","purchaseStartHandler","_this","setState","purchaseCancelHandler","purchaseContinueHandler","props","history","push","pathname","fetchIngredients","_callee","response","newIngredients","regenerator_default","wrap","_context","prev","next","axios","get","sent","data","ingredientSetHandler","t0","stop","this","offline","ingredientErrorHandler","fetchIngredientsHandler","setTimeout","burger","error","Retry","retryHandler","mainMessage","additionalMessage","style","color","cursor","Loader","orderSummary","Fragment","Suspense","fallback","totalPrice","ingredientIncreaseHandler","ingredientDecreaseHandler","totalCost","purchaseCancel","purchaseContinue","Modal","show","hider","Component","connectBurgerBuilder","connect","getIngredientState","dispatch","bindActionCreators","withErrorHandler"],"mappings":"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","file":"static/js/BurgerBuilder.d3d497fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3qwVA\",\"Label\":\"BuildControl_Label__3EfNH\",\"Less\":\"BuildControl_Less__3RwUd\",\"More\":\"BuildControl_More__2IZnf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1Xi_J\",\"OrderButton\":\"BuildControls_OrderButton__1U7Bj\",\"disable\":\"BuildControls_disable__1ca1i\",\"enable\":\"BuildControls_enable__3KbEx\"};","import React, { FunctionComponent, MouseEventHandler } from 'react';\r\nimport styles from './BuildControl.module.css';\r\n\r\nexport interface IBuildControlProps {\r\n  removed: MouseEventHandler;\r\n  disabled: boolean;\r\n  label: string;\r\n  added: MouseEventHandler;\r\n}\r\nconst BuildControl: FunctionComponent<IBuildControlProps> = ({\r\n  added,\r\n  disabled,\r\n  label,\r\n  removed,\r\n}) => {\r\n  return (\r\n    <div className={styles.BuildControl}>\r\n      <div className={styles.Label}>{label}</div>\r\n      <button onClick={removed} className={styles.Less} disabled={disabled}>\r\n        Less\r\n      </button>\r\n      <button onClick={added} className={styles.More}>\r\n        More\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildControl;\r\n","import React, { FunctionComponent, memo } from 'react';\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport styles from './BuildControls.module.css';\r\nimport { IingredientsKeys } from '../../../types/ingredients';\r\nimport { IbuildControlsProps, TdisabledCheck, Tcontrols } from './types/index';\r\n\r\nexport const controls: Tcontrols = [\r\n  { label: 'Salad', type: 'salad' },\r\n  { label: 'Bacon', type: 'bacon' },\r\n  { label: 'Cheese', type: 'cheese' },\r\n  { label: 'Meat', type: 'meat' },\r\n];\r\nconst buildControls: FunctionComponent<IbuildControlsProps> = ({\r\n  decrease,\r\n  increase,\r\n  ingredients,\r\n  price,\r\n  purchaseable,\r\n  purchaseStart,\r\n}) => {\r\n  const disabledCheck: TdisabledCheck = {\r\n    bacon: false,\r\n    cheese: false,\r\n    meat: false,\r\n    salad: false,\r\n  };\r\n  (Object.entries(ingredients) as Array<[IingredientsKeys, number]>).forEach(\r\n    ([key, value,]) => {\r\n      disabledCheck[key] = value <= 0;\r\n    },\r\n  );\r\n\r\n  return (\r\n    <div className={styles.BuildControls}>\r\n      <p>\r\n        Current Price: <strong>${price}</strong>\r\n      </p>\r\n      {controls.map(ctrl => (\r\n        <BuildControl\r\n          key={ctrl.label}\r\n          label={ctrl.label}\r\n          added={() => increase(ctrl.type)}\r\n          removed={() => decrease(ctrl.type)}\r\n          disabled={disabledCheck[ctrl.type]}\r\n        />\r\n      ))}\r\n      <button\r\n        onClick={purchaseStart}\r\n        className={styles.OrderButton}\r\n        disabled={!purchaseable}\r\n      >\r\n        ORDER NOW\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(buildControls);\r\n","import React, { Component, lazy } from 'react';\r\n\r\nimport { AxiosResponse } from 'axios';\r\nimport axios from '../../axios-orders';\r\nimport Retry from '../../components/Retry/Retry';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport withErrorHandler from '../../HOCs/withErrorHandler';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport { connect } from 'react-redux';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport { IBurgerBuilderState } from './types';\r\nimport { Iingredients } from '../../types/ingredients';\r\nimport {\r\n  ingredientIncreaseHandler,\r\n  ingredientDecreaseHandler,\r\n  ingredientSetHandler,\r\n  ingredientErrorHandler,\r\n  fetchIngredientsHandler,\r\n} from '../../store/reducers/actions';\r\nimport { GetConnectProps } from '../../store/types';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport { IingredientReducerAction } from '../../store/reducers/ingredientReducer/types';\r\nimport { getIngredientState } from '../../store/selectors/selectors';\r\n\r\nconst BurgerDisplay = lazy(() =>\r\n  import(/* webpackChunkName: \"BurgerDisplay\", webpackPrefetch: true */\r\n  '../../components/Burger/BurgerDisplay/BurgerDisplay'),\r\n);\r\n\r\nconst OrderSummary = lazy(() =>\r\n  import(/* webpackChunkName: \"OrderSummary\", webpackPrefetch: true */ '../../components/OrderSummary/OrderSummary'),\r\n);\r\n\r\n/**\r\n * @class BurgerBuilder\r\n * @extends {Component<IconnectIngredientsProps<RouteComponentProps>, IBurgerBuilderState>}\r\n */\r\nclass BurgerBuilder extends Component<\r\n  IBurgerBuilderProps,\r\n  IBurgerBuilderState\r\n> {\r\n  public state: IBurgerBuilderState = {\r\n    purchasing: false,\r\n  };\r\n\r\n  public async componentDidMount() {\r\n    this.props.ingredientSetHandler(null);\r\n    this.props.fetchIngredientsHandler();\r\n    setTimeout(() => {\r\n      import(/* webpackChunkName: \"Checkout\" */ '../Checkout/Checkout');\r\n    }, 10000);\r\n  }\r\n\r\n  public purchaseStartHandler = () => {\r\n    import(/* webpackChunkName: \"Checkout\" */ '../Checkout/Checkout');\r\n    this.setState({ purchasing: true });\r\n  };\r\n  public purchaseCancelHandler = () => {\r\n    this.setState({ purchasing: false });\r\n  };\r\n  public purchaseContinueHandler = () => {\r\n    if (!this.props.ingredients) {\r\n      return;\r\n    }\r\n    this.props.history.push({\r\n      pathname: '/checkout',\r\n    });\r\n  };\r\n\r\n  public render() {\r\n    let burger = this.props.error ? (\r\n      <Retry\r\n        retryHandler={this.fetchIngredients}\r\n        mainMessage=\"Ingredients Failed To Load. Please \"\r\n        additionalMessage={\r\n          <span\r\n            style={{ color: 'blue', cursor: 'pointer' }}\r\n            onClick={this.offline}\r\n          >\r\n            work offline for now?\r\n          </span>\r\n        }\r\n      />\r\n    ) : (\r\n      <Loader />\r\n    );\r\n\r\n    let orderSummary = null;\r\n\r\n    if (this.props.ingredients) {\r\n      burger = (\r\n        <>\r\n          <React.Suspense fallback={<Loader />}>\r\n            <BurgerDisplay ingredients={this.props.ingredients} />\r\n          </React.Suspense>\r\n          <BuildControls\r\n            ingredients={this.props.ingredients}\r\n            price={this.props.totalPrice}\r\n            increase={this.props.ingredientIncreaseHandler}\r\n            decrease={this.props.ingredientDecreaseHandler}\r\n            purchaseable={this.props.purchaseable}\r\n            purchaseStart={this.purchaseStartHandler}\r\n          />\r\n        </>\r\n      );\r\n\r\n      orderSummary = (\r\n        <React.Suspense fallback={<Loader />}>\r\n          <OrderSummary\r\n            ingredients={this.props.ingredients}\r\n            totalCost={this.props.totalPrice}\r\n            purchaseCancel={this.purchaseCancelHandler}\r\n            purchaseContinue={this.purchaseContinueHandler}\r\n          />\r\n        </React.Suspense>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Modal show={this.state.purchasing} hider={this.purchaseCancelHandler}>\r\n          {orderSummary}\r\n        </Modal>\r\n        {burger}\r\n      </>\r\n    );\r\n  }\r\n\r\n  private fetchIngredients = async () => {\r\n    // this.setState({ error: null });\r\n    try {\r\n      const response: AxiosResponse<Iingredients> = await axios.get(\r\n        '/ingredients.json',\r\n      );\r\n      const { data: newIngredients } = response;\r\n      this.props.ingredientSetHandler(newIngredients);\r\n    } catch (error) {\r\n      // tslint:disable-next-line:no-console\r\n      // this.setState({\r\n      //   error,\r\n      // });\r\n    }\r\n  };\r\n  private offline = () => {\r\n    this.props.ingredientSetHandler({\r\n      bacon: 0,\r\n      cheese: 0,\r\n      meat: 0,\r\n      salad: 0,\r\n    });\r\n    this.props.ingredientErrorHandler(false);\r\n  };\r\n}\r\n\r\nconst mapDispatch = (dispatch: Dispatch<IingredientReducerAction>) => {\r\n  return bindActionCreators(\r\n    {\r\n      ingredientIncreaseHandler,\r\n      ingredientDecreaseHandler,\r\n      ingredientSetHandler,\r\n      fetchIngredientsHandler,\r\n      ingredientErrorHandler,\r\n    },\r\n    dispatch as Dispatch,\r\n  );\r\n};\r\n\r\nconst connectBurgerBuilder = connect(\r\n  getIngredientState,\r\n  mapDispatch,\r\n);\r\nexport type IBurgerBuilderProps = RouteComponentProps &\r\n  GetConnectProps<typeof connectBurgerBuilder>;\r\nexport default connectBurgerBuilder(withErrorHandler(BurgerBuilder, axios));\r\n"],"sourceRoot":""}