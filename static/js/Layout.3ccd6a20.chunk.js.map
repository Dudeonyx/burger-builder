{"version":3,"sources":["components/UI/NavigationItems/NavigationItem/NavigationItem.tsx","components/UI/NavigationItems/NavigationItems.tsx","containers/Layout/Layout.module.css","components/UI/Toolbar/Toolbar.module.css","components/UI/NavigationItems/NavigationItems.module.css","components/UI/NavigationItems/NavigationItem/NavigationItem.module.css","components/UI/Toolbar/DrawerToggle/DrawerToggle.module.css","components/UI/Toolbar/DrawerToggle/DrawerToggle.tsx","components/UI/Toolbar/Toolbar.tsx","containers/Layout/Layout.tsx"],"names":["NavigationItem","_ref","active","link","linkName","react_default","a","createElement","className","styles","href","NavigationItems","url","name","map","NavigationItems_NavigationItem_NavigationItem","key","module","exports","Main","Toolbar","DesktopOnly","DrawerToggle","clicked","onClick","Logo","lazy","__webpack_require__","e","then","bind","drawerToggler","Toolbar_DrawerToggle_DrawerToggle","react","fallback","SideDrawer","Layout","state","showSideDrawer","hideSideDrawerHandler","_this","setState","toggleSideDrawerHandler","prevState","Fragment","UI_Toolbar_Toolbar","this","open","hider","props","children","Component"],"mappings":"+IAsCeA,EAZ4C,SAAAC,GAAA,IACzDC,EADyDD,EACzDC,OACAC,EAFyDF,EAEzDE,KACAC,EAHyDH,EAGzDG,SAHyD,OAKzDC,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOT,gBACpBK,EAAAC,EAAAC,cAAA,KAAGG,KAAMP,EAAMK,UAAWN,EAASO,IAAOP,OAAS,IACjDG,EAAAC,EAAAC,cAAA,YAAOH,MCNEO,IAtB8C,WAO3D,OACEN,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOE,iBAPP,CACf,CAAEC,IAAK,IAAKC,KAAM,iBAClB,CAAED,IAAK,IAAKC,KAAM,YAClB,CAAED,IAAK,IAAKC,KAAM,aAKNC,IAAK,SAAAb,GAAA,IAAIW,EAAJX,EAAIW,IAAKC,EAATZ,EAASY,KAAT,OAEbR,EAAAC,EAAAC,cAACQ,EAAD,CACEC,IAAKH,EACLV,KAAMS,EACNR,SAAUS,EACVX,OATQ,kBASAW,4BCnBlBI,EAAAC,QAAA,CAAkBC,KAAA,0CCAlBF,EAAAC,QAAA,CAAkBE,QAAA,yBAAAC,YAAA,kDCAlBJ,EAAAC,QAAA,CAAkBP,gBAAA,8DCAlBM,EAAAC,QAAA,CAAkBlB,eAAA,uCAAAE,OAAA,oDCAlBe,EAAAC,QAAA,CAAkBI,aAAA,8LCgBHA,EAVwC,SAAArB,GAAmB,IAAfsB,EAAetB,EAAfsB,QACzD,OACElB,EAAAC,EAAAC,cAAA,OAAKiB,QAASD,EAASf,UAAWC,IAAOa,cACvCjB,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,cCDAkB,EAAOC,eAAM,kBAAMC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,YAmBVV,EAd8B,SAAAnB,GAAyB,IAArB8B,EAAqB9B,EAArB8B,cAC/C,OACE1B,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAOW,SACxBf,EAAAC,EAAAC,cAACyB,EAAD,CAAcT,QAASQ,IACvB1B,EAAAC,EAAAC,cAAC0B,EAAA,SAAD,CAAUC,SAAU7B,EAAAC,EAAAC,cAAA,qBAClBF,EAAAC,EAAAC,cAACkB,EAAD,CAAMtB,KAAK,QAEbE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOY,aACrBhB,EAAAC,EAAAC,cAACI,EAAA,EAAD,SCdFwB,EAAaT,eAAM,kBACvBC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,YAkBIM,6MAKKC,MAAQ,CACfC,gBAAgB,KAQXC,sBAAwB,kBAAMC,EAAKC,SAAU,CAAEH,gBAAgB,OAOtEI,wBAA0B,kBACxBF,EAAKC,SAAU,SAAAE,GAAS,MAAM,CAAEL,gBAAiBK,EAAUL,2FAG3D,OACEjC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsC,SAAA,KACEvC,EAAAC,EAAAC,cAACsC,EAAD,CAASd,cAAee,KAAKJ,0BAC7BrC,EAAAC,EAAAC,cAAC0B,EAAA,SAAD,CAAUC,SAAU,MAClB7B,EAAAC,EAAAC,cAAC4B,EAAD,CACEY,KAAMD,KAAKT,MAAMC,eACjBU,MAAOF,KAAKP,yBAGhBlC,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAOU,MAAO2B,KAAKG,MAAMC,kBAlC7BC,aAwCNf","file":"static/js/Layout.3ccd6a20.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react';\r\nimport styles from './NavigationItem.module.css';\r\n\r\n/** @export\r\n * @interface INavigationItem\r\n */\r\nexport interface INavigationItem {\r\n  /** Indicative of the current page/route\r\n   * @type {boolean}\r\n   * @memberof INavigationItem\r\n   */\r\n  active: boolean;\r\n  /** Link the nav item should point to\r\n   * @type {string}\r\n   * @memberof INavigationItem\r\n   */\r\n  link: string;\r\n  /** Nav Name to display\r\n   * @type {string}\r\n   * @memberof INavigationItem\r\n   */\r\n  linkName: string;\r\n}\r\n/** Single nav item\r\n * @implements {INavigationItem}\r\n */\r\nconst NavigationItem: FunctionComponent<INavigationItem> = ( {\r\n  active,\r\n  link,\r\n  linkName,\r\n} ) => (\r\n  <li className={styles.NavigationItem}>\r\n    <a href={link} className={active ? styles.active : ''}>\r\n      <span>{linkName}</span>\r\n    </a>\r\n  </li>\r\n);\r\n\r\nexport default NavigationItem;\r\n","import React, { FunctionComponent } from 'react';\r\nimport styles from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nexport interface INavigationItems {}\r\nconst NavigationItems: FunctionComponent<INavigationItems> = () => {\r\n  const navItems = [\r\n    { url: '/', name: 'BurgerBuilder' },\r\n    { url: '/', name: 'Checkout' },\r\n    { url: '/', name: 'About Us' },\r\n  ];\r\n  const current = 'BurgerBuilder';\r\n  return (\r\n    <ul className={styles.NavigationItems}>\r\n      {navItems.map( ( { url, name } ) => (\r\n        // tslint:disable-next-line:jsx-no-multiline-js\r\n        <NavigationItem\r\n          key={name}\r\n          link={url}\r\n          linkName={name}\r\n          active={name === current ? true : false}\r\n        />\r\n      ) )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavigationItems;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Layout_Main__13vMk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__17lGP\",\"DesktopOnly\":\"Toolbar_DesktopOnly__Ojr45\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__oGuUw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2sjxc\",\"active\":\"NavigationItem_active__2zhiM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__1hqjN\"};","import React, { MouseEventHandler, FunctionComponent } from 'react';\r\nimport styles from './DrawerToggle.module.css';\r\n\r\nexport interface IDrawerToggle {\r\n  clicked: MouseEventHandler;\r\n}\r\n\r\nconst DrawerToggle: FunctionComponent<IDrawerToggle> = ( { clicked } ) => {\r\n  return (\r\n    <div onClick={clicked} className={styles.DrawerToggle}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrawerToggle;\r\n","import React, {\r\n  lazy,\r\n  Suspense,\r\n  FunctionComponent,\r\n  MouseEventHandler,\r\n} from 'react';\r\nimport styles from './Toolbar.module.css';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from './DrawerToggle/DrawerToggle';\r\n// import Logo from '../Logo/Logo';\r\n\r\nconst Logo = lazy( () => import( /* webpackChunkName: \"Logo\" */ '../Logo/Logo' ) );\r\n\r\nexport interface IToolbar {\r\n  drawerToggler: MouseEventHandler;\r\n}\r\nconst Toolbar: FunctionComponent<IToolbar> = ( { drawerToggler } ) => {\r\n  return (\r\n    <header className={styles.Toolbar}>\r\n      <DrawerToggle clicked={drawerToggler} />\r\n      <Suspense fallback={<p>Logo...</p>}>\r\n        <Logo link=\"##\" />\r\n      </Suspense>\r\n      <nav className={styles.DesktopOnly}>\r\n        <NavigationItems />\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React, {\r\n  Component,\r\n  lazy,\r\n  Suspense,\r\n  ComponentPropsWithoutRef,\r\n  ReactElement,\r\n} from 'react';\r\nimport styles from './Layout.module.css';\r\nimport Toolbar from '../../components/UI/Toolbar/Toolbar';\r\n\r\nconst SideDrawer = lazy( () =>\r\n  import( /* webpackChunkName: \"SideDrawer\" */ '../../components/UI/SideDrawer/SideDrawer' ),\r\n);\r\n\r\n/** @interface ILayoutState */\r\ninterface ILayoutState {\r\n  /**\r\n   * Show side drawer?\r\n   *\r\n   * @type {boolean}\r\n   * @memberof ILayoutState\r\n   */\r\n  showSideDrawer: boolean;\r\n}\r\n/**\r\n * A basic reuseable layout component\r\n * @class Layout\r\n * @extends {Component<{ children: JSX.Element }, ILayoutState>}\r\n */\r\nclass Layout extends Component<{ children: JSX.Element }, ILayoutState> {\r\n  /**\r\n   * @implements {ILayoutState}\r\n   * @memberof Layout\r\n   */\r\n  readonly state = {\r\n    showSideDrawer: false,\r\n  };\r\n\r\n  /**\r\n   * Handler that hides the side drawer\r\n   *\r\n   * @memberof Layout\r\n   */\r\n  public hideSideDrawerHandler = () => this.setState( { showSideDrawer: false } );\r\n  /**\r\n   * Handler that toggles the visibility\r\n   * of the side drawer\r\n   *\r\n   * @memberof Layout\r\n   */\r\n  toggleSideDrawerHandler = () =>\r\n    this.setState( prevState => ( { showSideDrawer: !prevState.showSideDrawer } ) )\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Toolbar drawerToggler={this.toggleSideDrawerHandler} />\r\n        <Suspense fallback={null}>\r\n          <SideDrawer\r\n            open={this.state.showSideDrawer}\r\n            hider={this.hideSideDrawerHandler}\r\n          />\r\n        </Suspense>\r\n        <main className={styles.Main}>{this.props.children}</main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n"],"sourceRoot":""}