{"version":3,"sources":["components/UI/NavigationItems/NavigationItem/NavigationItem.tsx","components/UI/NavigationItems/NavigationItems.tsx","components/UI/NavigationItems/NavigationItem/NavigationItem.module.css","components/UI/NavigationItems/NavigationItems.module.css","components/UI/Toolbar/DrawerToggle/DrawerToggle.module.css","components/UI/Toolbar/Toolbar.module.css","containers/Layout/Layout.module.css","components/UI/Toolbar/DrawerToggle/DrawerToggle.tsx","components/UI/Toolbar/Toolbar.tsx","containers/Layout/Layout.tsx"],"names":["NavigationItem","_ref","active","link","linkName","react_default","a","createElement","className","styles","href","React","memo","navElements","url","name","map","NavigationItems_NavigationItem_NavigationItem","key","NavigationItems","module","exports","DrawerToggle","Toolbar","DesktopOnly","Main","clicked","onClick","Logo","lazy","__webpack_require__","e","then","bind","drawerToggler","Toolbar_DrawerToggle_DrawerToggle","react","fallback","HQ","SideDrawer","Layout","state","showSideDrawer","hideSideDrawerHandler","_this","setState","toggleSideDrawerHandler","prevState","Fragment","UI_Toolbar_Toolbar","this","open","hider","props","children","PureComponent"],"mappings":"8HAsCeA,EAZ4C,SAAAC,GAAA,IACzDC,EADyDD,EACzDC,OACAC,EAFyDF,EAEzDE,KACAC,EAHyDH,EAGzDG,SAHyD,OAKzDC,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOT,gBACpBK,EAAAC,EAAAC,cAAA,KAAGG,KAAMP,EAAMK,UAAWN,EAASO,IAAOP,OAAS,IACjDG,EAAAC,EAAAC,cAAA,YAAOH,uBCVEO,QAAMC,KAlB0B,WAC7C,IAMMC,EANW,CACf,CAAEC,IAAK,IAAKC,KAAM,iBAClB,CAAED,IAAK,IAAKC,KAAM,YAClB,CAAED,IAAK,IAAKC,KAAM,aAGSC,IAAI,SAAAf,GAAA,IAAGa,EAAHb,EAAGa,IAAKC,EAARd,EAAQc,KAAR,OAC/BV,EAAAC,EAAAC,cAACU,EAAD,CACEC,IAAKH,EACLZ,KAAMW,EACNV,SAAUW,EACVb,OANY,kBAMJa,MAGZ,OAAOV,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOU,iBAAkBN,yBCnBjDO,EAAAC,QAAA,CAAkBrB,eAAA,uCAAAE,OAAA,oDCAlBkB,EAAAC,QAAA,CAAkBF,gBAAA,8DCAlBC,EAAAC,QAAA,CAAkBC,aAAA,wDCAlBF,EAAAC,QAAA,CAAkBE,QAAA,yBAAAC,YAAA,kDCAlBJ,EAAAC,QAAA,CAAkBI,KAAA,8ICgBHH,EAVwC,SAAArB,GAAmB,IAAfyB,EAAezB,EAAfyB,QACzD,OACErB,EAAAC,EAAAC,cAAA,OAAKoB,QAASD,EAASlB,UAAWC,IAAOa,cACvCjB,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,+BCDAqB,EAAOC,eAAK,kBAAMC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,YAmBTV,EAd8B,SAAAtB,GAAuB,IAApBiC,EAAoBjC,EAApBiC,cAC9C,OACE7B,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAOc,SACxBlB,EAAAC,EAAAC,cAAC4B,EAAD,CAAcT,QAASQ,IACvB7B,EAAAC,EAAAC,cAAC6B,EAAA,SAAD,CAAUC,SAAUhC,EAAAC,EAAAC,cAAA,qBAClBF,EAAAC,EAAAC,cAACqB,EAAD,CAAMzB,KAAK,KAAKmC,IAAI,KAEtBjC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOe,aACrBnB,EAAAC,EAAAC,cAACY,EAAA,EAAD,0BCpBFoB,EAAaV,eAAK,kBACtBC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,YAkBIO,6MAKYC,MAAQ,CACtBC,gBAAgB,KAQXC,sBAAwB,kBAAMC,EAAKC,SAAS,CAAEH,gBAAgB,OAO9DI,wBAA0B,kBAC/BF,EAAKC,SAAS,SAACE,GAAD,MAAgB,CAAEL,gBAAiBK,EAAUL,2FAG3D,OACErC,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0C,SAAA,KACE3C,EAAAC,EAAAC,cAAC0C,EAAD,CAASf,cAAegB,KAAKJ,0BAC7BzC,EAAAC,EAAAC,cAAC6B,EAAA,SAAD,CAAUC,SAAU,MAClBhC,EAAAC,EAAAC,cAACgC,EAAD,CACEY,KAAMD,KAAKT,MAAMC,eACjBU,MAAOF,KAAKP,yBAGhBtC,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAOgB,MAAOyB,KAAKG,MAAMC,kBAlC7BC,iBAwCNf","file":"static/js/Layout.5a66d57f.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react';\r\nimport styles from './NavigationItem.module.css';\r\n\r\n/** @export\r\n * @interface INavigationItem\r\n */\r\nexport interface INavigationItem {\r\n  /** Indicative of the current page/route\r\n   * @type {boolean}\r\n   * @memberof INavigationItem\r\n   */\r\n  active: boolean;\r\n  /** Link the nav item should point to\r\n   * @type {string}\r\n   * @memberof INavigationItem\r\n   */\r\n  link: string;\r\n  /** Nav Name to display\r\n   * @type {string}\r\n   * @memberof INavigationItem\r\n   */\r\n  linkName: string;\r\n}\r\n/** Single nav item\r\n * @implements {INavigationItem}\r\n */\r\nconst NavigationItem: FunctionComponent<INavigationItem> = ( {\r\n  active,\r\n  link,\r\n  linkName,\r\n} ) => (\r\n  <li className={styles.NavigationItem}>\r\n    <a href={link} className={active ? styles.active : ''}>\r\n      <span>{linkName}</span>\r\n    </a>\r\n  </li>\r\n);\r\n\r\nexport default NavigationItem;\r\n","import React, { FunctionComponent } from 'react';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport styles from './NavigationItems.module.css';\r\n\r\n// export interface INavigationItems {}\r\nconst NavigationItems: FunctionComponent<{}> = () => {\r\n  const navItems = [\r\n    { url: '/', name: 'BurgerBuilder' },\r\n    { url: '/', name: 'Checkout' },\r\n    { url: '/', name: 'About Us' },\r\n  ];\r\n  const current = 'BurgerBuilder';\r\n  const navElements = navItems.map(({ url, name }) => (\r\n    <NavigationItem\r\n      key={name}\r\n      link={url}\r\n      linkName={name}\r\n      active={name === current ? true : false}\r\n    />\r\n  ));\r\n  return <ul className={styles.NavigationItems}>{navElements}</ul>;\r\n};\r\n\r\nexport default React.memo(NavigationItems);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2sjxc\",\"active\":\"NavigationItem_active__2zhiM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__oGuUw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__1hqjN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__17lGP\",\"DesktopOnly\":\"Toolbar_DesktopOnly__Ojr45\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Layout_Main__13vMk\"};","import React, { MouseEventHandler, FunctionComponent } from 'react';\r\nimport styles from './DrawerToggle.module.css';\r\n\r\nexport interface IDrawerToggle {\r\n  clicked: MouseEventHandler;\r\n}\r\n\r\nconst DrawerToggle: FunctionComponent<IDrawerToggle> = ( { clicked } ) => {\r\n  return (\r\n    <div onClick={clicked} className={styles.DrawerToggle}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrawerToggle;\r\n","import React, {\r\n  FunctionComponent,\r\n  lazy,\r\n  MouseEventHandler,\r\n  Suspense,\r\n} from 'react';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from './DrawerToggle/DrawerToggle';\r\nimport styles from './Toolbar.module.css';\r\n// import Logo from '../Logo/Logo';\r\n\r\nconst Logo = lazy(() => import(/* webpackChunkName: \"Logo\" */ '../Logo/Logo'));\r\n\r\nexport interface IToolbar {\r\n  drawerToggler: MouseEventHandler;\r\n}\r\nconst Toolbar: FunctionComponent<IToolbar> = ({ drawerToggler }) => {\r\n  return (\r\n    <header className={styles.Toolbar}>\r\n      <DrawerToggle clicked={drawerToggler} />\r\n      <Suspense fallback={<p>Logo...</p>}>\r\n        <Logo link=\"##\" HQ={true} />\r\n      </Suspense>\r\n      <nav className={styles.DesktopOnly}>\r\n        <NavigationItems />\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React, { lazy, PureComponent, Suspense } from 'react';\r\nimport Toolbar from '../../components/UI/Toolbar/Toolbar';\r\nimport styles from './Layout.module.css';\r\n\r\nconst SideDrawer = lazy(() =>\r\n  import(/* webpackChunkName: \"SideDrawer\" */ '../../components/UI/SideDrawer/SideDrawer'),\r\n);\r\n\r\n/** @interface ILayoutState */\r\ninterface ILayoutState {\r\n  /**\r\n   * Show side drawer?\r\n   *\r\n   * @type {boolean}\r\n   * @memberof ILayoutState\r\n   */\r\n  showSideDrawer: boolean;\r\n}\r\n/**\r\n * A basic reuseable layout component\r\n * @class Layout\r\n * @extends {Component<{ children: JSX.Element }, ILayoutState>}\r\n */\r\nclass Layout extends PureComponent<{ children: JSX.Element }, ILayoutState> {\r\n  /**\r\n   * @implements {ILayoutState}\r\n   * @memberof Layout\r\n   */\r\n  public readonly state = {\r\n    showSideDrawer: false,\r\n  };\r\n\r\n  /**\r\n   * Handler that hides the side drawer\r\n   *\r\n   * @memberof Layout\r\n   */\r\n  public hideSideDrawerHandler = () => this.setState({ showSideDrawer: false });\r\n  /**\r\n   * Handler that toggles the visibility\r\n   * of the side drawer\r\n   *\r\n   * @memberof Layout\r\n   */\r\n  public toggleSideDrawerHandler = () =>\r\n    this.setState((prevState) => ({ showSideDrawer: !prevState.showSideDrawer }))\r\n\r\n  public render() {\r\n    return (\r\n      <>\r\n        <Toolbar drawerToggler={this.toggleSideDrawerHandler} />\r\n        <Suspense fallback={null}>\r\n          <SideDrawer\r\n            open={this.state.showSideDrawer}\r\n            hider={this.hideSideDrawerHandler}\r\n          />\r\n        </Suspense>\r\n        <main className={styles.Main}>{this.props.children}</main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n"],"sourceRoot":""}