{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Burger/BuildControls/BuildControls.module.css","components/Burger/BuildControls/BuildControl/BuildControl.tsx","components/Burger/BuildControls/BuildControls.tsx","containers/BurgerBuilder/BurgerBuilder.tsx"],"names":["module","exports","__webpack_require__","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","d","__webpack_exports__","BuildControl","Label","Less","More","BuildControls","OrderButton","disable","enable","_ref","added","disabled","label","removed","react_default","a","createElement","className","styles","onClick","controls","type","memo","decrease","increase","ingredients","price","purchasable","purchaseStart","disabledCheck","bacon","cheese","meat","salad","Object","entries","forEach","_ref2","_ref3","slicedToArray","map","ctrl","BuildControls_BuildControl_BuildControl","BurgerDisplay","lazy","e","bind","OrderSummary","BurgerBuilder","state","purchasing","loading","orders","purchaseStartHandler","_this","setState","purchaseCancelHandler","purchaseContinueHandler","props","history","push","pathname","fetchIngredients","_callee","response","newIngredients","regenerator_default","wrap","_context","prev","next","axios","get","sent","data","ingredientStoreHandler","t0","stop","offline","burger","Retry","retryHandler","mainMessage","additionalMessage","style","color","cursor","Loader","orderSummary","Fragment","Suspense","fallback","totalPrice","ingredientIncreaseHandler","ingredientDecreaseHandler","updatePurchasable","totalCost","purchaseCancel","purchaseContinue","Modal","show","hider","Component","connect","mapIngredientsStateToProps","withErrorHandler"],"mappings":"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","file":"static/js/BurgerBuilder.c72330a3.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3dcqR\",\"Label\":\"BuildControl_Label__1YceN\",\"Less\":\"BuildControl_Less__5gEap\",\"More\":\"BuildControl_More__339pH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2TwpT\",\"OrderButton\":\"BuildControls_OrderButton__333nx\",\"disable\":\"BuildControls_disable__2K67G\",\"enable\":\"BuildControls_enable__2vPto\"};","import React, { FunctionComponent, MouseEventHandler } from 'react';\r\nimport styles from './BuildControl.module.css';\r\n\r\nexport interface IBuildControlProps {\r\n  removed: MouseEventHandler;\r\n  disabled: boolean;\r\n  label: string;\r\n  added: MouseEventHandler;\r\n}\r\nconst BuildControl: FunctionComponent<IBuildControlProps> = ({\r\n  added,\r\n  disabled,\r\n  label,\r\n  removed,\r\n}) => {\r\n  return (\r\n    <div className={styles.BuildControl}>\r\n      <div className={styles.Label}>{label}</div>\r\n      <button onClick={removed} className={styles.Less} disabled={disabled}>\r\n        Less\r\n      </button>\r\n      <button onClick={added} className={styles.More}>\r\n        More\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildControl;\r\n","import React, { FunctionComponent, memo } from 'react';\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport styles from './BuildControls.module.css';\r\nimport { IingredientsKeys } from '../../../types/ingredients';\r\nimport { IbuildControlsProps, TdisabledCheck, Tcontrols } from './types/index';\r\n\r\nexport const controls: Tcontrols = [\r\n  { label: 'Salad', type: 'salad' },\r\n  { label: 'Bacon', type: 'bacon' },\r\n  { label: 'Cheese', type: 'cheese' },\r\n  { label: 'Meat', type: 'meat' },\r\n];\r\nconst buildControls: FunctionComponent<IbuildControlsProps> = ({\r\n  decrease,\r\n  increase,\r\n  ingredients,\r\n  price,\r\n  purchasable,\r\n  purchaseStart,\r\n}) => {\r\n  const disabledCheck: TdisabledCheck = {\r\n    bacon: false,\r\n    cheese: false,\r\n    meat: false,\r\n    salad: false,\r\n  };\r\n  (Object.entries(ingredients) as Array<[IingredientsKeys, number]>).forEach(\r\n    ([key, value,]) => {\r\n      disabledCheck[key] = value <= 0;\r\n    },\r\n  );\r\n\r\n  return (\r\n    <div className={styles.BuildControls}>\r\n      <p>\r\n        Current Price: <strong>${price}</strong>\r\n      </p>\r\n      {controls.map(ctrl => (\r\n        <BuildControl\r\n          key={ctrl.label}\r\n          label={ctrl.label}\r\n          added={() => increase(ctrl.type)}\r\n          removed={() => decrease(ctrl.type)}\r\n          disabled={disabledCheck[ctrl.type]}\r\n        />\r\n      ))}\r\n      <button\r\n        onClick={purchaseStart}\r\n        className={styles.OrderButton}\r\n        disabled={!purchasable}\r\n      >\r\n        ORDER NOW\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(buildControls);\r\n","import { updatePurchasable } from '../../shared/updatePurchasable';\r\nimport React, { Component, lazy } from 'react';\r\n\r\nimport { AxiosResponse } from 'axios';\r\nimport axios from '../../axios-orders';\r\nimport Retry from '../../components/Retry/Retry';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport withErrorHandler from '../../HOCs/withErrorHandler';\r\nimport {\r\n  ingredientIncreaseHandler,\r\n  ingredientDecreaseHandler,\r\n  ingredientStoreHandler,\r\n  mapIngredientsStateToProps,\r\n} from '../../store/reducers/ingredientReducer/actions';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport { connect } from 'react-redux';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport { IBurgerBuilderProps, IBurgerBuilderState } from './types';\r\nimport { Iingredients } from '../../types/ingredients';\r\n\r\nconst BurgerDisplay = lazy(() =>\r\n  import(/* webpackChunkName: \"BurgerDisplay\", webpackPrefetch: true */\r\n  '../../components/Burger/BurgerDisplay/BurgerDisplay'),\r\n);\r\n\r\nconst OrderSummary = lazy(() =>\r\n  import(/* webpackChunkName: \"OrderSummary\", webpackPrefetch: true */ '../../components/OrderSummary/OrderSummary'),\r\n);\r\n\r\n/**\r\n * @class BurgerBuilder\r\n * @extends {Component<IconnectIngredientsProps<RouteComponentProps>, IBurgerBuilderState>}\r\n */\r\nclass BurgerBuilder extends Component<\r\n  IBurgerBuilderProps,\r\n  IBurgerBuilderState\r\n> {\r\n  public state: IBurgerBuilderState = {\r\n    purchasing: false,\r\n    loading: false,\r\n    orders: [],\r\n    error: null,\r\n  };\r\n\r\n  public componentDidMount() {\r\n    this.props.ingredientStoreHandler(null);\r\n    this.fetchIngredients();\r\n  }\r\n\r\n  public purchaseStartHandler = () => {\r\n    this.setState({ purchasing: true });\r\n  };\r\n  public purchaseCancelHandler = () => {\r\n    this.setState({ purchasing: false });\r\n  };\r\n  public purchaseContinueHandler = () => {\r\n    if (!this.props.ingredients) {\r\n      return;\r\n    }\r\n    this.props.history.push({\r\n      pathname: '/checkout',\r\n      // search: '?' + newQueryString,\r\n    });\r\n  };\r\n\r\n  public render() {\r\n    let burger = this.state.error ? (\r\n      <Retry\r\n        retryHandler={this.fetchIngredients}\r\n        mainMessage=\"Ingredients Failed To Load. Please \"\r\n        additionalMessage={\r\n          <span\r\n            style={{ color: 'blue', cursor: 'pointer' }}\r\n            onClick={this.offline}\r\n          >\r\n            work offline for now?\r\n          </span>\r\n        }\r\n      />\r\n    ) : (\r\n      <Loader />\r\n    );\r\n\r\n    let orderSummary = null;\r\n\r\n    if (this.props.ingredients) {\r\n      burger = (\r\n        <>\r\n          <React.Suspense fallback={<Loader />}>\r\n            <BurgerDisplay ingredients={this.props.ingredients} />\r\n          </React.Suspense>\r\n          <BuildControls\r\n            ingredients={this.props.ingredients}\r\n            price={this.props.totalPrice}\r\n            increase={this.props.ingredientIncreaseHandler}\r\n            decrease={this.props.ingredientDecreaseHandler}\r\n            purchasable={updatePurchasable(this.props.ingredients)}\r\n            purchaseStart={this.purchaseStartHandler}\r\n          />\r\n        </>\r\n      );\r\n\r\n      orderSummary = (\r\n        <React.Suspense fallback={<Loader />}>\r\n          <OrderSummary\r\n            ingredients={this.props.ingredients}\r\n            totalCost={this.props.totalPrice}\r\n            purchaseCancel={this.purchaseCancelHandler}\r\n            purchaseContinue={this.purchaseContinueHandler}\r\n          />\r\n        </React.Suspense>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Modal show={this.state.purchasing} hider={this.purchaseCancelHandler}>\r\n          {orderSummary}\r\n        </Modal>\r\n        {burger}\r\n      </>\r\n    );\r\n  }\r\n\r\n  private fetchIngredients = async () => {\r\n    this.setState({ error: null });\r\n    try {\r\n      const response: AxiosResponse<Iingredients> = await axios.get(\r\n        '/ingredients.json',\r\n      );\r\n      const { data: newIngredients } = response;\r\n      this.props.ingredientStoreHandler(newIngredients);\r\n    } catch (error) {\r\n      // tslint:disable-next-line:no-console\r\n      this.setState({\r\n        error,\r\n      });\r\n    }\r\n  };\r\n  private offline = () => {\r\n    this.setState(\r\n      () => ({ error: false }),\r\n      () =>\r\n        this.props.ingredientStoreHandler({\r\n          bacon: 0,\r\n          cheese: 0,\r\n          meat: 0,\r\n          salad: 0,\r\n        }),\r\n    );\r\n  };\r\n}\r\n\r\nconst mapDispatch = () => ({\r\n  ingredientIncreaseHandler,\r\n  ingredientDecreaseHandler,\r\n  ingredientStoreHandler,\r\n});\r\n\r\nexport default connect(\r\n  mapIngredientsStateToProps,\r\n  mapDispatch,\r\n)(withErrorHandler(BurgerBuilder, axios));\r\n"],"sourceRoot":""}