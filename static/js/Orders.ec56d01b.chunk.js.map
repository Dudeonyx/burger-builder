{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/Order/Order.tsx","containers/Orders/Orders.tsx"],"names":["module","exports","__webpack_require__","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","d","__webpack_exports__","StyledOrder","styled","div","withConfig","displayName","componentId","Order","_ref","ingredients","totalPrice","name","id","breakdown","className","Object","entries","map","_ref2","_ref3","slicedToArray","igKey","igVal","react_default","a","createElement","INGREDIENT_PRICES","Fragment","toFixed","concat","base","StyledOrders","Orders","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","fetchOrders","asyncToGenerator","regenerator_default","mark","_callee","response","data","_formattedOrders","wrap","_context","prev","next","setState","loading","axios","get","sent","formattedOrders","reverse","slice","_ref3$","basicInfo","price","orders","t0","console","stop","state","allOrders","Loader","length","customer","components_Order_Order","Component","withErrorHandler"],"mappings":"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","file":"static/js/Orders.ec56d01b.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { FunctionComponent } from 'react';\r\nimport { Iingredients } from '../../containers/BurgerBuilder/BurgerBuilder';\r\nimport { IingredientsKeys } from '../Burger/BuildControls/BuildControls';\r\nimport { INGREDIENT_PRICES } from '../../shared/getTotalPrice';\r\nimport styled from 'styled-components/macro';\r\n\r\nconst StyledOrder = styled.div`\r\n  & {\r\n    text-align: center;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    box-shadow: 0px 0px 10px 1px rgba(0, 0, 0, 0.658);\r\n    margin: 15px;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: center;\r\n  }\r\n\r\n  span {\r\n    text-transform: capitalize;\r\n    flex: 0.4 0.02 42%;\r\n    margin: 5px 5px;\r\n    padding: 1px;\r\n    border: 1px solid rgba(0, 0, 0, 0.226);\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 4px 1px rgba(0, 0, 0, 0.459);\r\n    background-color: rgba(169, 169, 169, 0.13);\r\n  }\r\n  h4,\r\n  h5 {\r\n    flex: 1 1 100%;\r\n  }\r\n  p {\r\n    flex: 1 1 100%;\r\n    margin: 5px 0;\r\n\r\n    @media (min-width: 500px) {\r\n      span {\r\n        flex: 0.4 0.02 4.95rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\ninterface IOrdersProps {\r\n  ingredients: Iingredients;\r\n  name: string;\r\n  totalPrice: string;\r\n  id: string;\r\n  className?: string;\r\n}\r\n\r\nconst Order: FunctionComponent<IOrdersProps> = ({\r\n  ingredients,\r\n  totalPrice,\r\n  name,\r\n  id,\r\n  className,\r\n}) => {\r\n  const breakdown = (Object.entries(ingredients) as Array<\r\n    [IingredientsKeys, number]\r\n  >).map(([igKey, igVal,]) => (\r\n    <span key={id + igKey + igVal}>\r\n      {igKey} - {igVal}\r\n      <br />\r\n      {igVal * INGREDIENT_PRICES[igKey] > 0 ? (\r\n        <>${(igVal * INGREDIENT_PRICES[igKey]).toFixed(2)}</>\r\n      ) : (\r\n        <>N/A</>\r\n      )}\r\n    </span>\r\n  ));\r\n  return (\r\n    <StyledOrder>\r\n      <h4>{`Name: ${name}`}</h4>\r\n      {breakdown}\r\n      <p>Base Cost: ${INGREDIENT_PRICES.base.toFixed(2)}</p>\r\n      <h5>Total Cost: ${totalPrice}</h5>\r\n    </StyledOrder>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React, { FunctionComponent, Component } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Iingredients } from '../BurgerBuilder/BurgerBuilder';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport Loader from '../../components/UI/Loader/Loader';\nimport withErrorHandler from '../../HOCs/withErrorHandler';\nimport styled from 'styled-components/macro';\n// tslint:disable-next-line:no-empty-interface\nexport interface IOrdersProps extends RouteComponentProps {}\n\nexport interface IDbOrder {\n  basicInfo: {\n    name: string;\n    phone: string;\n    email: string;\n  };\n  address: {\n    street: string;\n    city: string;\n    state: string;\n    country: string;\n  };\n  deliveryMethod: string;\n  ingredients: Iingredients;\n  date: string;\n  price: string;\n}\nexport interface IDbOrders {\n  [x: string]: IDbOrder;\n}\nexport interface IformattedOrder {\n  id: string;\n  ingredients: Iingredients;\n  name: string;\n  totalPrice: string;\n}\nexport interface IOrdersState {\n  orders: IDbOrders | null;\n  loading: boolean;\n  formattedOrders: IformattedOrder[];\n}\n\nconst StyledOrders = styled.div`\n  & {\n    display: flex;\n    flex-flow: column;\n    justify-content: space-around;\n    align-items: center;\n    width: 100%;\n    margin: 10px 0;\n  }\n  .OrderBox {\n    padding: 10px;\n    box-sizing: border-box;\n    box-shadow: 0px 0px 10px 3px rgba(0, 0, 0, 0.658);\n    margin: 15px;\n    border-radius: 20px;\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-around;\n    align-items: center;\n    width: 90%;\n    min-height: 65vh;\n  }\n  .OrderWrapper {\n    flex: 0.3 0.2 100%;\n  }\n\n  @media (min-width: 650px) {\n    .OrderBox {\n      max-width: 600px;\n    }\n  }\n`;\nclass Orders extends Component<IOrdersProps, IOrdersState> {\n  constructor(props: IOrdersProps) {\n    super(props);\n    this.state = {\n      orders: null,\n      loading: false,\n      formattedOrders: [],\n    };\n  }\n\n  public componentDidMount = () => {\n    this.fetchOrders();\n  };\n\n  private fetchOrders = async () => {\n    try {\n      type T = string;\n      this.setState({ loading: true });\n      const response = await axios.get<IDbOrders>('/orders.json');\n      const { data } = response;\n\n      const formattedOrders: IformattedOrder[] = (Object.entries(data) as Array<\n        [T, IDbOrders[T]]\n      >)\n        .reverse()\n        .slice()\n        .map(\n          ([\n            id,\n            {\n              basicInfo: { name },\n              ingredients,\n              price: totalPrice,\n            },\n          ]) => ({ id, name, ingredients, totalPrice }),\n        );\n\n      this.setState({ orders: data, formattedOrders, loading: false });\n    } catch (error) {\n      // tslint:disable-next-line:no-console\n      console.error(error);\n      this.setState({ loading: false });\n    }\n  };\n\n  public render() {\n    const allOrders = this.state.loading ? (\n      <Loader />\n    ) : this.state.formattedOrders.length > 0 ? (\n      this.state.formattedOrders.map(customer => (\n        <div className=\"OrderWrapper\" key={customer.id}>\n          <Order {...customer} />\n        </div>\n      ))\n    ) : null;\n\n    return (\n      <StyledOrders>\n        <h3>Here Are Your Orders</h3>\n        <div className=\"OrderBox\">{allOrders}</div>\n      </StyledOrders>\n    );\n  }\n}\n\n// Orders.propTypes = {\n//   // bla: PropTypes.string,\n// };\n\n// Orders.defaultProps = {\n//   // bla: 'test',\n// };\n\nexport default withErrorHandler(Orders, axios);\n"],"sourceRoot":""}