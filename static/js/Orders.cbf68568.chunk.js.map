{"version":3,"sources":["components/Order/Order.tsx","containers/Orders/Orders.styles.ts","containers/Orders/Orders.tsx"],"names":["jsx","StyledOrder","name","styles","Order","_ref","ingredients","totalPrice","id","breakdown","className","Object","entries","map","_ref2","_ref3","slicedToArray","igKey","igVal","core_browser_esm","key","INGREDIENT_PRICES","react_default","a","Fragment","toFixed","css","concat","base","StyledOrders","styled_base_browser_esm","target","Orders","componentDidMount","_this","fetchOrders","_callee","regenerator_default","wrap","_context","prev","next","props","t0","console","error","__webpack_require__","e","then","bind","finish","stop","this","generateOrderArray","customer","_index","_array","createElement","components_Order_Order","allOrders","loading","Loader","formattedOrders","length","Component","getOrdersState","createSelector","selectformattedOrders","selectOrdersLoading","connectOrders","connect","dispatch","bindActionCreators","withErrorHandler","axios"],"mappings":"qNAQAA,IACA,IAAMC,EAAW,CAAAC,KAAA,UAAAC,OAAA,6fA4EFC,EA9BgC,SAAAC,GAMzC,IALJC,EAKID,EALJC,YACAC,EAIIF,EAJJE,WACAL,EAGIG,EAHJH,KACAM,EAEIH,EAFJG,GAGMC,GADFJ,EADJK,UAEmBC,OAAOC,QAAQN,GAE/BO,IAAI,SAAAC,GAAA,IAAAC,EAAAJ,OAAAK,EAAA,EAAAL,CAAAG,EAAA,GAAEG,EAAFF,EAAA,GAASG,EAATH,EAAA,UACLJ,OAAAQ,EAAA,EAAAR,CAAA,QAAMS,IAAKZ,EAAKS,EAAQC,GACrBD,EADH,MACaC,EACXP,OAAAQ,EAAA,EAAAR,CAAA,WACCO,EAAQG,IAAkBJ,GAAS,EAClCN,OAAAQ,EAAA,EAAAR,CAAAW,EAAAC,EAAAC,SAAA,UAAKN,EAAQG,IAAkBJ,IAAQQ,QAAQ,IAE/Cd,OAAAQ,EAAA,EAAAR,CAAAW,EAAAC,EAAAC,SAAA,gBAIN,OACEb,OAAAQ,EAAA,EAAAR,CAAA,OAAKe,IAAKzB,GACRU,OAAAQ,EAAA,EAAAR,CAAA,mBAAAgB,OAAczB,IACbO,EACDE,OAAAQ,EAAA,EAAAR,CAAA,wBAAgBU,IAAkBO,KAAKH,QAAQ,IAC/Cd,OAAAQ,EAAA,EAAAR,CAAA,0BAAkBJ,qCC/EXsB,EAAYlB,OAAAmB,EAAA,EAAAnB,CAAA,OAAAoB,OAAA,aAAApB,CAAA,CAAAT,KAAA,UAAAC,OAAA,kgBCoBnB6B,6MACGC,kBAAoB,WACzBC,EAAKC,iBAGCA,iCAAc,SAAAC,IAAA,OAAAC,EAAAd,EAAAe,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEZP,EAAKQ,MAAMP,cAFC,OAAAI,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAKlBK,QAAQC,MAARN,EAAAI,IALkB,cAAAJ,EAAAC,KAAA,EAOlBM,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,WAPkBV,EAAAW,OAAA,4BAAAX,EAAAY,SAAAf,EAAAgB,KAAA,mBA0BdC,mBAAqB,SAC3BC,EACAC,EACAC,GAEA,OACElC,EAAAC,EAAAkC,cAAA,OAAK/C,UAAU,eAAeU,IAAKkC,EAAS9C,IAC1Cc,EAAAC,EAAAkC,cAACC,EAAUJ,6EArBf,IAAMK,EAAYP,KAAKV,MAAMkB,QAC3BtC,EAAAC,EAAAkC,cAACI,EAAA,EAAD,MACET,KAAKV,MAAMoB,gBAAgBC,OAAS,EACtCX,KAAKV,MAAMoB,gBAAgBjD,IAAIuC,KAAKC,oBAClC,KAEJ,OACE/B,EAAAC,EAAAkC,cAAC5B,EAAD,KACEP,EAAAC,EAAAkC,cAAA,kCACAnC,EAAAC,EAAAkC,cAAA,OAAK/C,UAAU,YAAYiD,WA1BdK,aA4CRC,EAAiBC,YAC5BC,IACAC,IACA,SAACN,EAAiBF,GAChB,MAAO,CACLE,kBACAF,aAcAS,EAAgBC,YACpBL,EAV+B,SAACM,GAChC,OAAOC,6BACL,CACErC,iBAEFoC,KAWWF,YAAcI,YAAiBzC,EAAQ0C","file":"static/js/Orders.cbf68568.chunk.js","sourcesContent":["/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport css from '@emotion/css/macro';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { INGREDIENT_PRICES } from '../../shared/getTotalPrice';\r\nimport { Iingredients, IingredientsKeys } from '../../types/ingredients';\r\n// import styled from 'styled-components/macro';\r\n// tslint:disable-next-line:no-unused-expression\r\njsx;\r\nconst StyledOrder = css`\r\n  & {\r\n    text-align: center;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    box-shadow: 0px 0px 10px 1px rgba(0, 0, 0, 0.658);\r\n    margin: 15px;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: center;\r\n  }\r\n\r\n  span {\r\n    text-transform: capitalize;\r\n    flex: 0.4 0.02 42%;\r\n    margin: 5px 5px;\r\n    padding: 1px;\r\n    border: 1px solid rgba(0, 0, 0, 0.226);\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 4px 1px rgba(0, 0, 0, 0.459);\r\n    background-color: rgba(169, 169, 169, 0.13);\r\n  }\r\n  h4,\r\n  h5 {\r\n    flex: 1 1 100%;\r\n  }\r\n  p {\r\n    flex: 1 1 100%;\r\n    margin: 5px 0;\r\n\r\n    @media (min-width: 500px) {\r\n      span {\r\n        flex: 0.4 0.02 4.95rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\ninterface IOrdersProps {\r\n  ingredients: Iingredients;\r\n  name: string;\r\n  totalPrice: string;\r\n  id: string;\r\n  className?: string;\r\n}\r\n\r\nconst Order: FunctionComponent<IOrdersProps> = ({\r\n  ingredients,\r\n  totalPrice,\r\n  name,\r\n  id,\r\n  className,\r\n}) => {\r\n  const breakdown = (Object.entries(ingredients) as Array<\r\n    [IingredientsKeys, number]\r\n  >).map(([igKey, igVal,]) => (\r\n    <span key={id + igKey + igVal}>\r\n      {igKey} - {igVal}\r\n      <br />\r\n      {igVal * INGREDIENT_PRICES[igKey] > 0 ? (\r\n        <>${(igVal * INGREDIENT_PRICES[igKey]).toFixed(2)}</>\r\n      ) : (\r\n        <>N/A</>\r\n      )}\r\n    </span>\r\n  ));\r\n  return (\r\n    <div css={StyledOrder}>\r\n      <h4>{`Name: ${name}`}</h4>\r\n      {breakdown}\r\n      <p>Base Cost: ${INGREDIENT_PRICES.base.toFixed(2)}</p>\r\n      <h5>Total Cost: ${totalPrice}</h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import styled from '@emotion/styled/macro';\r\nexport const StyledOrders = styled.div`\r\n  & {\r\n    display: flex;\r\n    flex-flow: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    width: 100%;\r\n    margin: 10px 0;\r\n  }\r\n  .OrderBox {\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    box-shadow: 0px 0px 10px 3px rgba(0, 0, 0, 0.658);\r\n    margin: 15px;\r\n    border-radius: 20px;\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    width: 90%;\r\n    min-height: 65vh;\r\n  }\r\n  .OrderWrapper {\r\n    flex: 0.3 0.2 100%;\r\n  }\r\n\r\n  @media (min-width: 650px) {\r\n    .OrderBox {\r\n      max-width: 600px;\r\n    }\r\n  }\r\n`;\r\n","import React, { Component } from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport withErrorHandler from '../../HOCs/withErrorHandler';\r\nimport { IOrdersState } from './types';\r\nimport { StyledOrders } from './Orders.styles';\r\nimport {\r\n  IformattedOrder,\r\n  IordersReducerAction,\r\n} from '../../store/reducers/ordersReducer/types';\r\nimport { GetConnectProps } from '../../store/types';\r\nimport { createSelector } from 'reselect';\r\nimport {\r\n  selectformattedOrders,\r\n  selectOrdersLoading,\r\n} from '../../store/selectors/selectors';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport { fetchOrders } from '../../store/reducers/actions';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nclass Orders extends Component<IOrdersProps, IOrdersState> {\r\n  public componentDidMount = () => {\r\n    this.fetchOrders();\r\n  };\r\n\r\n  private fetchOrders = async () => {\r\n    try {\r\n      await this.props.fetchOrders();\r\n    } catch (error) {\r\n      // tslint:disable-next-line:no-console\r\n      console.error(error);\r\n    } finally {\r\n      import(/* webpackChunkName: \"BurgerBuilder\" */ '../BurgerBuilder/BurgerBuilder');\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    const allOrders = this.props.loading ? (\r\n      <Loader />\r\n    ) : this.props.formattedOrders.length > 0 ? (\r\n      this.props.formattedOrders.map(this.generateOrderArray)\r\n    ) : null;\r\n\r\n    return (\r\n      <StyledOrders>\r\n        <h3>Here Are Your Orders</h3>\r\n        <div className=\"OrderBox\">{allOrders}</div>\r\n      </StyledOrders>\r\n    );\r\n  }\r\n\r\n  private generateOrderArray = (\r\n    customer: IformattedOrder,\r\n    _index: number,\r\n    _array: IformattedOrder[],\r\n  ) => {\r\n    return (\r\n      <div className=\"OrderWrapper\" key={customer.id}>\r\n        <Order {...customer} />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport const getOrdersState = createSelector(\r\n  selectformattedOrders,\r\n  selectOrdersLoading,\r\n  (formattedOrders, loading) => {\r\n    return {\r\n      formattedOrders,\r\n      loading,\r\n    };\r\n  },\r\n);\r\n\r\nconst mapOrdersDispatchToProps = (dispatch: Dispatch<IordersReducerAction>) => {\r\n  return bindActionCreators(\r\n    {\r\n      fetchOrders,\r\n    },\r\n    dispatch as any,\r\n  );\r\n};\r\n\r\nconst connectOrders = connect(\r\n  getOrdersState,\r\n  mapOrdersDispatchToProps,\r\n);\r\n\r\nexport type IOrdersProps = RouteComponentProps &\r\n  GetConnectProps<typeof connectOrders>;\r\nexport default connectOrders(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}