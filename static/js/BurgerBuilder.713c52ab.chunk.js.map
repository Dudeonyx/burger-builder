{"version":3,"sources":["axios-orders.tsx","HOCs/withErrorHandler.tsx","containers/BurgerBuilder/BurgerBuilder.tsx"],"names":["axiosOrderInstance","axios","create","baseURL","Modal","lazy","__webpack_require__","e","then","bind","withErrorHandler","WrappedComponent","_Component","WithErrorHandler","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","error","req","res","errorConfirmed","setState","inherits","createClass","key","value","_this2","interceptors","request","use","response","eject","react_default","a","createElement","Fragment","show","hider","message","props","Component","BurgerDisplay","BuildControls","OrderSummary","INGREDIENT_PRICES","salad","cheese","bacon","meat","BurgerBuilder","ingredients","totalPrice","purchasable","purchasing","loading","orders","updatePurchasable","values","some","igVal","ingredientIncreaseHandler","type","newIngredients","objectSpread","newTotalPrice","ingredientDecreaseHandler","purchaseStartHandler","purchaseCancelHandler","purchaseContinueHandler","_callee","order","_orders","regenerator_default","wrap","_context","prev","next","generateOrder","post","sent","console","log","data","name","t0","finish","stop","fetchIngredients","_callee2","_context2","get","burger","style","color","cursor","onClick","Loader","orderSummary","Suspense","fallback","price","increase","decrease","purchaseStart","purchaseCancel","purchaseContinue","BurgerBuilder_Modal","customer","address","street","city","country","phone","areaCode","email","deliveryMethod","toFixed","date","Date"],"mappings":"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","file":"static/js/BurgerBuilder.713c52ab.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst axiosOrderInstance = axios.create( {\r\n  baseURL: 'https://react-burger-builder-8d6de.firebaseio.com/',\r\n} );\r\n\r\nexport default axiosOrderInstance;\r\n","import { AxiosInstance } from 'axios';\r\nimport React, { Component, ComponentType, lazy } from 'react';\r\n\r\nconst Modal = lazy(() =>\r\n  import(/* webpackChunkName: \"Modal\" */ '../components/UI/Modal/Modal'),\r\n);\r\n\r\nexport interface IWithErrorHandlerState {\r\n  error: Error | null;\r\n}\r\n\r\n/** @template P\r\n * @param {ComponentType<P>} WrappedComponent\r\n * @param {AxiosInstance} axios\r\n * @returns\r\n */\r\nfunction withErrorHandler<P extends object>(\r\n  WrappedComponent: ComponentType<P>,\r\n  axios: AxiosInstance,\r\n) {\r\n  return class WithErrorHandler extends Component<P> {\r\n    public state: IWithErrorHandlerState = {\r\n      error: null,\r\n    };\r\n\r\n    private req: number | null = null;\r\n\r\n    private res: number | null = null;\r\n\r\n    public componentWillMount() {\r\n      this.req = axios.interceptors.request.use(\r\n        (req) => {\r\n          this.setState({ error: null });\r\n          return req;\r\n        },\r\n        (error) => {\r\n          throw error;\r\n        },\r\n      );\r\n      this.res = axios.interceptors.response.use(\r\n        (req) => req,\r\n        (error) => {\r\n          this.setState({ error });\r\n          throw error;\r\n        },\r\n      );\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n      if (this.req) {\r\n        axios.interceptors.request.eject(this.req);\r\n      }\r\n      if (this.res) {\r\n        axios.interceptors.response.eject(this.res);\r\n      }\r\n    }\r\n\r\n    public errorConfirmed = () => {\r\n      this.setState({ error: null });\r\n    }\r\n\r\n    public render() {\r\n      return (\r\n        <>\r\n          {this.state.error ? (\r\n            <Modal show={!!this.state.error} hider={this.errorConfirmed}>\r\n              {this.state.error.message}\r\n            </Modal>\r\n          ) : null}\r\n          <WrappedComponent {...this.props} />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport default withErrorHandler;\r\n","import React, { Component, lazy } from 'react';\r\n\r\nimport { AxiosResponse } from 'axios';\r\nimport axios from '../../axios-orders';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport withErrorHandler from '../../HOCs/withErrorHandler';\r\n\r\nconst BurgerDisplay = lazy(() =>\r\n  import(/* webpackChunkName: \"BurgerDisplay\", webpackPreload: true */\r\n  '../../components/Burger/BurgerDisplay/BurgerDisplay'),\r\n);\r\nconst BuildControls = lazy(() =>\r\n  import(/* webpackChunkName: \"BuildControls\", webpackPreload: true */\r\n  '../../components/Burger/BuildControls/BuildControls'),\r\n);\r\nconst Modal = lazy(() =>\r\n  import(/* webpackChunkName: \"Modal\" */ '../../components/UI/Modal/Modal'),\r\n);\r\nconst OrderSummary = lazy(() =>\r\n  import(/* webpackChunkName: \"OrderSummary\" */ '../../components/OrderSummary/OrderSummary'),\r\n);\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  // tslint:disable-next-line:object-literal-sort-keys\r\n  cheese: 0.6,\r\n  bacon: 0.8,\r\n  meat: 1.4,\r\n};\r\ninterface IBurgerBuilderState {\r\n  ingredients: Iingredients | null;\r\n  totalPrice: number;\r\n  purchasable: boolean;\r\n  purchasing: boolean;\r\n  loading: boolean;\r\n  orders: string[];\r\n  error: Error | null;\r\n}\r\ninterface Iingredients {\r\n  salad: number;\r\n  bacon: number;\r\n  cheese: number;\r\n  meat: number;\r\n}\r\nclass BurgerBuilder extends Component<{}, IBurgerBuilderState> {\r\n  /*  tslint:disable:object-literal-sort-keys */\r\n  public state: IBurgerBuilderState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    purchasable: false,\r\n    purchasing: false,\r\n    loading: false,\r\n    orders: [],\r\n    error: null,\r\n  };\r\n  /*  tslint:enable:object-literal-sort-keys */\r\n  /**\r\n   * componentDidMount\r\n   */\r\n  public componentDidMount() {\r\n    this.fetchIngredients();\r\n  }\r\n  public updatePurchasable = (ingredients: Iingredients): boolean => {\r\n    return Object.values(ingredients).some((igVal) => igVal !== 0);\r\n  }\r\n\r\n  public ingredientIncreaseHandler = (type: keyof Iingredients): void => {\r\n    if (!this.state.ingredients) {\r\n      return;\r\n    }\r\n    const newIngredients = { ...this.state.ingredients };\r\n    newIngredients[type] += 1;\r\n    const newTotalPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\r\n    this.setState({\r\n      ingredients: newIngredients,\r\n      purchasable: this.updatePurchasable(newIngredients),\r\n      totalPrice: newTotalPrice,\r\n    });\r\n  }\r\n  public ingredientDecreaseHandler = (type: keyof Iingredients) => {\r\n    if (!this.state.ingredients) {\r\n      return;\r\n    }\r\n    if (this.state.ingredients[type] <= 0) {\r\n      return;\r\n    }\r\n    const newIngredients = { ...this.state.ingredients };\r\n    newIngredients[type] -= 1;\r\n    const newTotalPrice = this.state.totalPrice - INGREDIENT_PRICES[type];\r\n    this.setState({\r\n      ingredients: newIngredients,\r\n      purchasable: this.updatePurchasable(newIngredients),\r\n      totalPrice: newTotalPrice,\r\n    });\r\n  }\r\n\r\n  public purchaseStartHandler = () => {\r\n    this.setState({ purchasing: true });\r\n  }\r\n  public purchaseCancelHandler = () => {\r\n    this.setState({ purchasing: false });\r\n  }\r\n  public purchaseContinueHandler = async () => {\r\n    try {\r\n      this.setState({ loading: true });\r\n      const order = this.generateOrder();\r\n      const response = await axios.post('/orders.json', order);\r\n      // tslint:disable-next-line:no-console\r\n      console.log(response);\r\n      const orders = this.state.orders.concat(response.data.name);\r\n      this.setState({ orders });\r\n    } catch (error) {\r\n      // tslint:disable-next-line:no-console\r\n      console.log(error);\r\n    } finally {\r\n      this.setState({ purchasing: false, loading: false });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let burger = this.state.error ? (\r\n      <p>\r\n        Ingredients failed to load. Please{' '}\r\n        <span\r\n          style={{ color: 'red', cursor: 'pointer' }}\r\n          onClick={this.fetchIngredients}\r\n        >\r\n          retry\r\n        </span>\r\n      </p>\r\n    ) : (\r\n      <Loader />\r\n    );\r\n\r\n    let orderSummary = null;\r\n\r\n    if (this.state.ingredients) {\r\n      burger = (\r\n        <>\r\n          <React.Suspense fallback={<Loader />}>\r\n            <BurgerDisplay ingredients={this.state.ingredients} />\r\n          </React.Suspense>\r\n          <React.Suspense fallback={<Loader />}>\r\n            <BuildControls\r\n              ingredients={this.state.ingredients}\r\n              price={this.state.totalPrice}\r\n              increase={this.ingredientIncreaseHandler}\r\n              decrease={this.ingredientDecreaseHandler}\r\n              purchasable={this.state.purchasable}\r\n              purchaseStart={this.purchaseStartHandler}\r\n            />\r\n          </React.Suspense>\r\n        </>\r\n      );\r\n\r\n      orderSummary = (\r\n        <React.Suspense fallback={<Loader />}>\r\n          <OrderSummary\r\n            ingredients={this.state.ingredients}\r\n            price={this.state.totalPrice}\r\n            purchaseCancel={this.purchaseCancelHandler}\r\n            purchaseContinue={this.purchaseContinueHandler}\r\n          />\r\n        </React.Suspense>\r\n      );\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      orderSummary = <Loader />;\r\n    }\r\n    return (\r\n      <React.Suspense fallback={<Loader />}>\r\n        <Modal show={this.state.purchasing} hider={this.purchaseCancelHandler}>\r\n          {orderSummary}\r\n        </Modal>\r\n        {burger}\r\n      </React.Suspense>\r\n    );\r\n  }\r\n\r\n  private generateOrder() {\r\n    /*  tslint:disable:object-literal-sort-keys */\r\n    return {\r\n      customer: {\r\n        name: 'OnyekaChukwu',\r\n        address: {\r\n          street: 'Adjenughure Street',\r\n          city: 'Effural',\r\n          state: 'Selta',\r\n          country: 'Nier',\r\n        },\r\n        phone: '123-255-8416',\r\n        areaCode: '+56',\r\n        email: 'test@testing.on',\r\n      },\r\n      deliveryMethod: 'cheapest',\r\n      ingredients: this.state.ingredients,\r\n      price: this.state.totalPrice.toFixed(2),\r\n      date: Date(),\r\n    };\r\n    /*  tslint:enable:object-literal-sort-keys */\r\n  }\r\n\r\n  private fetchIngredients = async () => {\r\n    this.setState({ error: null });\r\n    try {\r\n      const response: AxiosResponse<Iingredients> = await axios.get(\r\n        '/ingredients.json',\r\n      );\r\n      this.setState({\r\n        ingredients: response.data,\r\n        purchasable: this.updatePurchasable(response.data),\r\n      });\r\n    } catch (error) {\r\n      // tslint:disable-next-line:no-console\r\n      this.setState({ error });\r\n    }\r\n  }\r\n}\r\n\r\nexport default withErrorHandler(BurgerBuilder, axios);\r\n"],"sourceRoot":""}