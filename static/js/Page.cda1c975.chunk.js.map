{"version":3,"sources":["containers/Page/Page.tsx"],"names":["Page","_useState","useState","Array","from","keys","n","value","id","Math","random","_useState2","Object","C_github_burger_builder_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","setState","count","useRef","useEffect","current","_useMakeLamda","useMakeLamda","_evt","key","currentCount","itemNo","console","log","concat","prevState","filter","makeLamda","_useForceUpdate","useForceUpdate","forceUpdate","list","useMemo","map","item","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","Div","onClick","Fragment","as","children","styles","name","React","memo","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","target"],"mappings":"2IAuDeA,UAxCiB,WAAM,IAAAC,EACVC,mBAAS,kBACjCC,MAAMC,KAAKD,MAAM,IAAIE,OAAQ,SAAAC,GAAC,MAAK,CAAEC,MAAOD,EAAI,EAAGE,GAAIC,KAAKC,cAF1BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAX,EAAA,GAC7Ba,EAD6BH,EAAA,GACtBI,EADsBJ,EAAA,GAK9BK,EAAQC,iBAAO,GACrBC,oBAAU,WACRF,EAAMG,SAAW,IAPiB,IAAAC,EAUhBC,YAClB,SAACC,EAAkBC,EAAaC,EAAsBC,GACpDC,QAAQC,IAAR,sBAAAC,OAAkCH,EAAlC,sBAAAG,OAA6DJ,IAC7DT,EAAS,SAAAc,GAAS,OAAIA,EAAUC,OAAO,SAAAxB,GAAC,OAAIA,EAAEE,KAAOe,OAEvD,IALKQ,EAV6BnB,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,MAAAY,EAiBZC,cAAfC,EAjB2BtB,OAAAC,EAAA,EAAAD,CAAAoB,EAAA,MAmB9BG,EAAOC,kBACX,kBACEtB,EAAMuB,IAAI,SAAAC,GAAI,OACZC,EAAAC,EAAAC,cAACC,EAAD,CAAKnB,IAAKe,EAAK9B,GAAImC,QAASZ,EAAUO,EAAK9B,GAAIQ,EAAMG,QAASmB,EAAK/B,QAAnE,cAAAqB,OACiBU,EAAK/B,WAG1B,CAACO,EAAOiB,IAGV,OACEQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAI,SAAA,KACEL,EAAAC,EAAAC,cAACC,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAD,CAAKG,GAAG,SAASF,QAAST,EAAaY,SAAU,uBAElDX,IAQP,IAAMY,EAAM,CAAAC,KAAA,SAAAD,OAAA,4JAgBNL,EAAMO,IAAMC,KAANtC,OAAAuC,EAAA,EAAAvC,CAAA,OAAAwC,OAAA,YAAAxC,CACRmC,EADQ","file":"static/js/Page.cda1c975.chunk.js","sourcesContent":["import React, {\r\n  FunctionComponent,\r\n  useState,\r\n  // useMemo,\r\n  ReactChild,\r\n  MouseEvent,\r\n  useRef,\r\n  useEffect,\r\n  ReactNode,\r\n  useMemo,\r\n} from 'react';\r\nimport { useForceUpdate, useMakeLamda } from '../../shared/CustomHooks';\r\nimport styled from '@emotion/styled/macro';\r\nimport css from '@emotion/css/macro';\r\n\r\nconst Page: FunctionComponent = () => {\r\n  const [state, setState] = useState(() =>\r\n    Array.from(Array(30).keys(), n => ({ value: n + 1, id: Math.random() })),\r\n  );\r\n\r\n  const count = useRef(0);\r\n  useEffect(() => {\r\n    count.current += 1;\r\n  });\r\n\r\n  const [makeLamda] = useMakeLamda(\r\n    (_evt: MouseEvent, key: number, currentCount: number, itemNo: number) => {\r\n      console.log(`Removed 'List Item ${itemNo}', current count: ${currentCount}`);\r\n      setState(prevState => prevState.filter(n => n.id !== key));\r\n    },\r\n    [],\r\n  );\r\n  const [, forceUpdate] = useForceUpdate();\r\n\r\n  const list = useMemo(\r\n    () =>\r\n      state.map(item => (\r\n        <Div key={item.id} onClick={makeLamda(item.id, count.current, item.value)}>\r\n          {`List Item: ${item.value}`}\r\n        </Div>\r\n      )),\r\n    [state, makeLamda],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Div>\r\n        <Div as=\"button\" onClick={forceUpdate} children={'Trigger Re-render'} />\r\n      </Div>\r\n      {list}\r\n      {/* <div>{Math.random() > 0.5 ? <p>{'There he is'}</p> : <p>{'Where\\'s the baby?'}</p>}</div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n\r\nconst styles = css`\r\n  margin: 5px;\r\n  border: 1px black solid;\r\n  border-radius: 6px;\r\n  padding: 5px;\r\n  text-align: center;\r\n  text-shadow: 1px 1px 2px grey;\r\n  font-variant: small-caps;\r\n  font-weight: bold;\r\n`;\r\ninterface DivProps {\r\n  onClick?: (...a: any[]) => void;\r\n  className?: string;\r\n  children?: ReactChild;\r\n  as?: ReactNode | keyof JSX.IntrinsicElements;\r\n}\r\nconst Div = React.memo(styled.div<DivProps>`\r\n  ${styles}\r\n`);\r\n"],"sourceRoot":""}