{"version":3,"sources":["components/OrderText/OrderText.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","components/Order/CheckoutSummary/CheckoutSummary.tsx","containers/Checkout/ContactData/Input/Input.tsx","containers/Checkout/ContactData/ContactData.tsx","containers/Checkout/Checkout.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/OrderText/OrderText.tsx"],"names":["module","exports","OrderText","CheckoutSummary","BurgerDisplay","lazy","__webpack_require__","e","then","bind","_ref","ingredients","totalCost","checkoutCancel","checkoutContinue","purchasable","react_default","a","createElement","className","styles","react","fallback","Loader","Object","assign","totalCostPrefix","Button","btnType","onClick","disabled","StyledInput","styled","div","withConfig","displayName","componentId","Input","input","type","id","name","placeholder","onChange","value","label","defaultChecked","dataSet","checked","htmlFor","data-set","Fragment","immer","Modal","Promise","all","SModal","suspenseNode2","StyledContactData","ContactData","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","formHandler","asyncToGenerator","regenerator_default","mark","_callee","_e$currentTarget$valu","_e$currentTarget$data","set","produce","wrap","_context","prev","next","currentTarget","dataset","sent","default","setState","draft","customer","console","error","concat","stop","_x","apply","arguments","cancel","preventDefault","history","goBack","submit","_ref2","_callee2","_this$state$customer","_deliveryMethod","_basicInfo","_address","order","response","_context2","form","reportValidity","loading","state","deliveryMethod","basicInfo","address","phone","email","street","city","country","price","totalPrice","date","Date","axios","post","log","push","t0","_x2","required","options","_this2","_this$state$customer2","action","values","map","obj","ContactData_Input_Input","key","children","show","hider","bgColor","minWidth","Component","Checkout","componentDidMount","query","URLSearchParams","location","search","newIngredients","forEach","igVal","igKey","newTotalPrice","getTotalPrice","updatePurchasable","match","path","Route","render","p","Checkout_ContactData_ContactData","Order_CheckoutSummary_CheckoutSummary","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","done","_asyncToGenerator","fn","self","args","err","undefined","d","__webpack_exports__","title","summary","entries","_ref3","D_github_burger_builder_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","style","textTransform","display","fontWeight"],"mappings":"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","file":"static/js/Checkout.cda0acdf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"OrderText\":\"OrderText_OrderText__3ZKBI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3N_ia\"};","import React, {\r\n  FunctionComponent,\r\n  MouseEventHandler,\r\n  lazy,\r\n  Suspense,\r\n} from 'react';\r\nimport Button from '../../Button/Button';\r\nimport OrderText, { IOrderIngredientsPrice } from '../../OrderText/OrderText';\r\nimport styles from './CheckoutSummary.module.css';\r\nimport Loader from '../../UI/Loader/Loader';\r\n\r\nconst BurgerDisplay = lazy(() =>\r\n  import('../../Burger/BurgerDisplay/BurgerDisplay'),\r\n);\r\ninterface ICheckoutSummaryProps extends IOrderIngredientsPrice {\r\n  checkoutCancel: MouseEventHandler;\r\n  checkoutContinue: MouseEventHandler;\r\n  purchasable: boolean;\r\n}\r\n\r\nconst CheckoutSummary: FunctionComponent<ICheckoutSummaryProps> = ({\r\n  ingredients,\r\n  totalCost,\r\n  checkoutCancel,\r\n  checkoutContinue,\r\n  purchasable,\r\n}) => {\r\n  return (\r\n    <div className={styles.CheckoutSummary}>\r\n      <h3>We Hope You'll Enjoy This</h3>\r\n      <Suspense fallback={<Loader />}>\r\n        <BurgerDisplay {...{ ingredients }} />\r\n      </Suspense>\r\n      <OrderText\r\n        {...{ ingredients, totalCost }}\r\n        totalCostPrefix=\"The total cost of your order is\"\r\n      />\r\n      <div>\r\n        <Button btnType=\"Danger\" onClick={checkoutCancel}>\r\n          CANCEL\r\n        </Button>\r\n        <Button\r\n          disabled={!purchasable}\r\n          btnType=\"Success\"\r\n          onClick={checkoutContinue}\r\n        >\r\n          CONTINUE\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutSummary;\r\n","import React, {\n  FunctionComponent,\n  MouseEventHandler,\n  ChangeEventHandler,\n} from 'react';\nimport styled from 'styled-components/macro';\n// import PropTypes from 'prop-types';\n// import { Test } from './Input.styles';\nexport interface IInputProps {\n  type:\n    | 'text'\n    | 'email'\n    | 'street-address'\n    | 'country-name'\n    | 'tel'\n    | 'radio'\n    | 'select';\n  id: string;\n  name: string;\n  placeholder?: string;\n  onChange: ChangeEventHandler;\n  value: string;\n  label: string;\n  defaultChecked?: boolean;\n  checked?: boolean;\n  dataSet: 'basicInfo' | 'address' | 'deliveryMethod';\n  options?: Array<{ value: string; label: string }>;\n}\n\nconst StyledInput = styled.div`\n  * {\n    box-sizing: border-box;\n  }\n  label {\n    display: flex;\n    justify-content: space-between;\n  }\n  label.radio {\n    justify-content: center;\n  }\n  span {\n    flex: 2 1 5em;\n    align-self: center;\n    text-align: left;\n    padding-left: 1em;\n  }\n  input {\n    flex: 10 1 auto;\n    background-color: rgba(255, 255, 255, 0.74);\n    border-radius: 10px;\n    padding: 4px;\n    outline: none;\n  }\n  .radio input {\n    flex: 0;\n  }\n  input:focus {\n    background-color: rgb(255, 255, 255);\n    border: 2px solid rgb(255, 166, 0);\n  }\n  @media (max-width: 400px) {\n    font-size: 0.85em;\n  }\n`;\n/**\n * @param {IInputProps} {\n *   inputType,\n *   id,\n *   name,\n *   placeholder,\n *   onChange,\n *   value,\n *   label,\n *   defaultChecked\n * }\n * @interface FunctionComponent<IInputProps>\n */\nconst Input: FunctionComponent<IInputProps> = ({\n  type,\n  id,\n  name,\n  placeholder,\n  onChange,\n  value,\n  label,\n  defaultChecked,\n  checked,\n  dataSet,\n},) => {\n  let input;\n  switch (type) {\n    case 'text':\n    case 'email':\n    case 'street-address':\n    case 'country-name':\n    case 'tel':\n      input = (\n        <StyledInput>\n          <label htmlFor={id}>\n            <span>{label} </span>\n            <input\n              id={id}\n              type={type}\n              name={name}\n              placeholder={placeholder}\n              onChange={onChange}\n              value={value}\n              data-set={dataSet}\n            />\n          </label>\n        </StyledInput>\n      );\n      break;\n    case 'radio':\n      input = (\n        <StyledInput>\n          <label htmlFor={id} className=\"radio\">\n            <input\n              id={id}\n              type={type}\n              name={name}\n              onChange={onChange}\n              value={value}\n              defaultChecked={defaultChecked}\n              data-set={dataSet}\n            />{' '}\n            <span>{label}</span>\n          </label>\n        </StyledInput>\n      );\n      break;\n    case 'select':\n      // input = (\n      //   <div>\n      //     <input\n      //       id={id}\n      //       type={type}\n      //       name={name}\n      //       onChange={onChange}\n      //       value={value}\n      //       defaultChecked={defaultChecked}\n      //       data-set={dataSet}\n      //     />\n      //     <label htmlFor={id}>{label} </label>\n      //   </div>\n      // );\n      break;\n    default:\n      break;\n  }\n\n  return <>{input}</>;\n};\n\n// Input.propTypes = {\n//   // bla: PropTypes.string,\n// };\n\n// Input.defaultProps = {\n//   // bla: 'test',\n// };\n\nexport default Input;\n","import React, { MouseEvent, Component, ChangeEvent, lazy } from 'react';\r\nimport { Iingredients } from '../../BurgerBuilder/BurgerBuilder';\r\nimport Button from '../../../components/Button/Button';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport axios from '../../../axios-orders';\r\nimport Loader from '../../../components/UI/Loader/Loader';\r\nimport Input from './Input/Input';\r\nimport { IDbOrder } from '../../Orders/Orders';\r\nimport styled from 'styled-components/macro';\r\n// import produce from 'immer';\r\nimport { suspenseNode2 } from '../../../HOCs/suspensed';\r\n// import Modal from '../../../components/UI/Modal/Modal';\r\n\r\nconst immer = import(/* webpackChunkName: \"immer\", webpackPrefetch: true */ 'immer');\r\nconst Modal = lazy(() =>\r\n  import(/* webpackChunkName: \"Modal\", webpackPrefetch: true */ '../../../components/UI/Modal/Modal'),\r\n);\r\n\r\nconst SModal = suspenseNode2(Modal);\r\n\r\n// tslint:disable-next-line:no-empty-interface\r\nexport interface IContactDataProps extends RouteComponentProps {\r\n  ingredients: Iingredients;\r\n  totalPrice: string;\r\n}\r\n\r\nexport interface IInputConfig {\r\n  value: string;\r\n  type: 'text' | 'email' | 'street-address' | 'country-name' | 'tel' | 'radio';\r\n  placeholder?: string;\r\n  id: string;\r\n  name: string;\r\n  label: string;\r\n  dataSet: 'basicInfo' | 'address' | 'deliveryMethod';\r\n  checked?: boolean;\r\n  defaultChecked?: boolean;\r\n  required?: boolean;\r\n}\r\n\r\n// tslint:disable-next-line:no-empty-interface\r\nexport interface IContactDataState {\r\n  customer: {\r\n    basicInfo: {\r\n      name: IInputConfig;\r\n      phone: IInputConfig;\r\n      email: IInputConfig;\r\n    };\r\n    address: {\r\n      street: IInputConfig;\r\n      city: IInputConfig;\r\n      state: IInputConfig;\r\n      country: IInputConfig;\r\n    };\r\n    deliveryMethod: {\r\n      deliveryMethod: { value: string };\r\n      options: IInputConfig[];\r\n    };\r\n  };\r\n  loading: boolean;\r\n}\r\nconst StyledContactData = styled.div`\r\n  margin: 10px auto;\r\n  text-align: center;\r\n  /* max-width: 80%; */\r\n\r\n  form div {\r\n    margin: 4px 0;\r\n  }\r\n\r\n  form {\r\n    /* padding: 10px; */\r\n    box-sizing: border-box;\r\n    border-radius: 10px;\r\n    background-color: rgba(255, 255, 255, 0.842);\r\n  }\r\n\r\n  @media (min-width: 550px) {\r\n    max-width: 540px;\r\n  }\r\n`;\r\nclass ContactData extends Component<IContactDataProps, IContactDataState> {\r\n  constructor(props: IContactDataProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      customer: {\r\n        basicInfo: {\r\n          name: {\r\n            value: '',\r\n            type: 'text',\r\n            placeholder: 'Your Name',\r\n            id: 'name_id',\r\n            name: 'name',\r\n            label: 'Name:',\r\n            dataSet: 'basicInfo',\r\n            required: true,\r\n          },\r\n          phone: {\r\n            value: '',\r\n            type: 'tel',\r\n            placeholder: 'Your Phone no.',\r\n            id: 'phone_id',\r\n            name: 'phone',\r\n            label: 'Phone no.:',\r\n            dataSet: 'basicInfo',\r\n            required: true,\r\n          },\r\n          email: {\r\n            value: '',\r\n            type: 'email',\r\n            placeholder: 'Your Email',\r\n            id: 'email_id',\r\n            name: 'email',\r\n            label: 'Email:',\r\n            dataSet: 'basicInfo',\r\n            required: true,\r\n          },\r\n        },\r\n        address: {\r\n          street: {\r\n            value: '',\r\n            type: 'street-address',\r\n            placeholder: 'Your Street',\r\n            id: 'street_id',\r\n            name: 'street',\r\n            label: 'Street:',\r\n            dataSet: 'address',\r\n            required: true,\r\n          },\r\n          city: {\r\n            value: '',\r\n            type: 'text',\r\n            placeholder: 'Your City',\r\n            id: 'city_id',\r\n            name: 'city',\r\n            label: 'City:',\r\n            dataSet: 'address',\r\n            required: true,\r\n          },\r\n          state: {\r\n            value: '',\r\n            type: 'text',\r\n            placeholder: 'Your State/Province',\r\n            id: 'state_id',\r\n            name: 'state',\r\n            label: 'State/\\nProvince:',\r\n            dataSet: 'address',\r\n            required: true,\r\n          },\r\n          country: {\r\n            value: '',\r\n            type: 'country-name',\r\n            placeholder: 'Your Country',\r\n            id: 'country_id',\r\n            name: 'country',\r\n            label: 'Country:',\r\n            dataSet: 'address',\r\n            required: true,\r\n          },\r\n        },\r\n\r\n        deliveryMethod: {\r\n          deliveryMethod: { value: '' },\r\n          options: [\r\n            {\r\n              value: 'cheapest',\r\n              type: 'radio',\r\n              id: 'cheapest_id',\r\n              name: 'deliveryMethod',\r\n              label: 'Cheapest',\r\n              dataSet: 'deliveryMethod',\r\n            },\r\n            {\r\n              value: 'cheap',\r\n              type: 'radio',\r\n              id: 'cheap_id',\r\n              name: 'deliveryMethod',\r\n              label: 'Cheap',\r\n              dataSet: 'deliveryMethod',\r\n            },\r\n            {\r\n              value: 'normal',\r\n              type: 'radio',\r\n              id: 'normal_id',\r\n              name: 'deliveryMethod',\r\n              label: 'Normal',\r\n              defaultChecked: true,\r\n              dataSet: 'deliveryMethod',\r\n            },\r\n            {\r\n              value: 'expensive',\r\n              type: 'radio',\r\n              id: 'expensive_id',\r\n              name: 'deliveryMethod',\r\n              label: 'Expensive',\r\n              dataSet: 'deliveryMethod',\r\n            },\r\n            {\r\n              value: 'very_expensive',\r\n              type: 'radio',\r\n              id: 'very_expensive_id',\r\n              name: 'deliveryMethod',\r\n              label: 'Very Expensive',\r\n              dataSet: 'deliveryMethod',\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    const { address, deliveryMethod, basicInfo } = this.state.customer;\r\n    const form = this.state.loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <form action=\"\" id=\"order_form\">\r\n        <h3>Enter Your Contact Details to Complete Your Order.</h3>\r\n        {Object.values(basicInfo).map(obj => (\r\n          <Input {...obj} onChange={this.formHandler} key={obj.id} />\r\n        ))}\r\n        <fieldset>\r\n          <legend>Address</legend>\r\n          {Object.values(address).map(obj => (\r\n            <Input {...obj} onChange={this.formHandler} key={obj.id} />\r\n          ))}\r\n        </fieldset>\r\n        <fieldset>\r\n          <legend>Delivery Method</legend>\r\n          {deliveryMethod.options.map(obj => (\r\n            <Input {...obj} onChange={this.formHandler} key={obj.id} />\r\n          ))}\r\n        </fieldset>\r\n\r\n        <div>\r\n          <Button\r\n            type=\"reset\"\r\n            children=\"CANCEL\"\r\n            onClick={this.cancel}\r\n            btnType=\"Danger\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            children=\"ORDER\"\r\n            onClick={this.submit}\r\n            btnType=\"Success\"\r\n          />\r\n        </div>\r\n      </form>\r\n    );\r\n    return (\r\n      <StyledContactData>\r\n        <SModal show={true} hider={this.cancel} bgColor=\"white\" minWidth={650}>\r\n          {form}\r\n        </SModal>\r\n      </StyledContactData>\r\n    );\r\n  }\r\n\r\n  private formHandler = async (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { value = '' } = e.currentTarget;\r\n    const { name } = e.currentTarget;\r\n    const { set = '' } = e.currentTarget.dataset;\r\n    const produce = (await immer).default;\r\n    this.setState(\r\n      produce(draft => {\r\n        if (\r\n          !(draft.customer as any)[set] ||\r\n          !(name in (draft.customer as any)[set])\r\n        ) {\r\n          // tslint:disable-next-line:no-console\r\n          console.error(`${name} not found in ${set}`);\r\n          return;\r\n        }\r\n        (draft.customer as any)[set][name].value = value;\r\n      }),\r\n    );\r\n  };\r\n  private cancel = (e: MouseEvent<Element>) => {\r\n    e.preventDefault();\r\n    this.props.history.goBack();\r\n  };\r\n  private submit = async (e: MouseEvent<HTMLButtonElement>) => {\r\n    if (e.currentTarget.form && e.currentTarget.form.reportValidity()) {\r\n      try {\r\n        e.preventDefault();\r\n        this.setState({ loading: true });\r\n\r\n        const { deliveryMethod, basicInfo, address } = this.state.customer;\r\n\r\n        const order: IDbOrder = {\r\n          basicInfo: {\r\n            name: basicInfo.name.value,\r\n            phone: basicInfo.phone.value,\r\n            email: basicInfo.email.value,\r\n          },\r\n          address: {\r\n            street: address.street.value,\r\n            city: address.city.value,\r\n            state: address.state.value,\r\n            country: address.country.value,\r\n          },\r\n          deliveryMethod: deliveryMethod.deliveryMethod.value,\r\n          ingredients: this.props.ingredients,\r\n          price: this.props.totalPrice,\r\n          date: Date(),\r\n        };\r\n\r\n        const response = await axios.post('/orders.json', order);\r\n        // tslint:disable-next-line:no-console\r\n        console.log(response);\r\n        //   const orders = this.state.orders.concat(response.data.name);\r\n        //   this.setState({ orders });\r\n        this.setState(\r\n          () => ({ loading: false }),\r\n          () => this.props.history.push('/all-orders'),\r\n        );\r\n      } catch (error) {\r\n        // tslint:disable-next-line:no-console\r\n        console.log(error);\r\n        this.setState({ loading: false });\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport default ContactData;\r\n","import React, { Component } from 'react';\r\nimport { RouteComponentProps, Route } from 'react-router-dom';\r\nimport { IingredientsKeys } from '../../components/Burger/BuildControls/BuildControls';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport { getTotalPrice } from '../../shared/getTotalPrice';\r\nimport { Iingredients } from '../BurgerBuilder/BurgerBuilder';\r\nimport styles from './Checkout.module.css';\r\nimport ContactData from './ContactData/ContactData';\r\nimport { updatePurchasable } from '../../shared/updatePurchasable';\r\n\r\n/**\r\n * @export\r\n * @interface ICheckoutState\r\n */\r\nexport interface ICheckoutState {\r\n  /**\r\n   * @type {Iingredients}\r\n   * @memberof ICheckoutState\r\n   */\r\n  ingredients: Iingredients | null;\r\n  /**\r\n   * @type {number}\r\n   * @memberof ICheckoutState\r\n   */\r\n  totalPrice: string | null;\r\n  purchasable: boolean;\r\n}\r\n\r\nclass Checkout extends Component<RouteComponentProps, ICheckoutState> {\r\n  constructor(props: RouteComponentProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ingredients: null,\r\n      purchasable: false,\r\n      totalPrice: null,\r\n    };\r\n  }\r\n  public componentDidMount = () => {\r\n    const query = new URLSearchParams(this.props.location.search);\r\n    const newIngredients = {} as Iingredients;\r\n    query.forEach(\r\n      (igVal, igKey) => (newIngredients[igKey as IingredientsKeys] = +igVal),\r\n    );\r\n    const newTotalPrice = getTotalPrice(newIngredients);\r\n    const purchasable = updatePurchasable(newIngredients);\r\n    this.setState({\r\n      ingredients: newIngredients,\r\n      purchasable,\r\n      totalPrice: newTotalPrice,\r\n    });\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <div className={styles.Checkout}>\r\n        <Route\r\n          path={this.props.match.path + '/contact-data'}\r\n          render={p =>\r\n            this.state.ingredients && this.state.totalPrice ? (\r\n              <ContactData\r\n                {...p}\r\n                ingredients={this.state.ingredients}\r\n                totalPrice={this.state.totalPrice}\r\n              />\r\n            ) : null\r\n          }\r\n        />\r\n        {this.state.ingredients && this.state.totalPrice ? (\r\n          <>\r\n            <CheckoutSummary\r\n              ingredients={this.state.ingredients}\r\n              totalCost={this.state.totalPrice}\r\n              checkoutCancel={this.checkoutCancel}\r\n              checkoutContinue={this.checkoutContinue}\r\n              purchasable={this.state.purchasable}\r\n            />\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private checkoutCancel = () => {\r\n    this.props.history.goBack();\r\n  };\r\n  private checkoutContinue = () => {\r\n    this.props.history.push(this.props.match.path + '/contact-data');\r\n  };\r\n}\r\nexport default Checkout;\r\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { FunctionComponent } from 'react';\r\nimport { Iingredients } from '../../containers/BurgerBuilder/BurgerBuilder';\r\nimport styles from './OrderText.module.css';\r\n\r\nexport interface IOrderIngredientsPrice {\r\n  /**\r\n   * @type {Iingredients}\r\n   * @memberof IOrderIngredientsPrice\r\n   */\r\n  ingredients: Iingredients;\r\n  /**\r\n   * @type {number}\r\n   * @memberof IOrderIngredientsPrice\r\n   */\r\n  totalCost: string;\r\n}\r\nexport interface IOrderTextProps extends IOrderIngredientsPrice {\r\n  /** A heading to display\r\n   * @type {string}\r\n   * @memberof IOrderTextProps\r\n   */\r\n  title?: string;\r\n  /** The text to display before the totalcost\r\n   * @type {string}\r\n   * @memberof IOrderTextProps\r\n   */\r\n  totalCostPrefix?: string;\r\n}\r\n\r\n/**\r\n * Component that displays the individual ingredient costs\r\n * and total cost.\r\n * @implements IOrderTextProps\r\n */\r\nconst OrderText: FunctionComponent<IOrderTextProps> = ({\r\n  ingredients,\r\n  totalCost,\r\n  totalCostPrefix,\r\n  title\r\n}) => {\r\n  const summary = Object.entries(ingredients).map(([igKey, igVal]) => (\r\n    <li style={{ textTransform: 'capitalize' }} key={igKey}>\r\n      <span style={{ display: 'inline-block', minWidth: '3.7em' }}>\r\n        {igKey}:\r\n      </span>\r\n      {` ${igVal}`}\r\n    </li>\r\n  ));\r\n  return (\r\n    <div className={styles.OrderText}>\r\n      {title ? <h3 style={{ fontWeight: 'bold' }}>{title}</h3> : null}\r\n      <div>\r\n        <ul>{summary}</ul>\r\n      </div>\r\n      {totalCostPrefix ? (\r\n        <p style={{ fontWeight: 'bold' }}>\r\n          {totalCostPrefix} ${totalCost}\r\n        </p>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderText;\r\n"],"sourceRoot":""}