{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","containers/BurgerBuilder/BurgerBuilder.tsx"],"names":["module","exports","__webpack_require__","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","d","__webpack_exports__","BurgerDisplay","lazy","e","bind","BuildControls","Modal","all","OrderSummary","BurgerBuilder","state","purchasable","purchasing","loading","orders","ingredientIncreaseHandler","_callee","type","nextState","D_github_burger_builder_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","_this","props","ingredients","abrupt","produce","draft","updatePurchasable","setState","stop","ingredientDecreaseHandler","_callee2","_context2","purchaseStartHandler","purchaseCancelHandler","purchaseContinueHandler","history","push","pathname","fetchIngredients","_callee3","response","newIngredients","_context3","axios","get","sent","data","ingredientStoreHandler","t0","offline","bacon","cheese","meat","salad","prevProps","prevState","_this2","burger","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","_components_Retry_Retry__WEBPACK_IMPORTED_MODULE_10__","retryHandler","mainMessage","additionalMessage","style","color","cursor","onClick","_components_UI_Loader_Loader__WEBPACK_IMPORTED_MODULE_11__","orderSummary","Fragment","Suspense","fallback","price","totalPrice","increase","decrease","purchaseStart","totalCost","purchaseCancel","purchaseContinue","show","hider","Component","connect","mapIngredientsStateToProps","withErrorHandler"],"mappings":"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","file":"static/js/BurgerBuilder.e68bfd6d.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { updatePurchasable } from '../../shared/updatePurchasable';\r\nimport React, { Component, lazy } from 'react';\r\n\r\nimport { AxiosResponse } from 'axios';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport axios from '../../axios-orders';\r\nimport Retry from '../../components/Retry/Retry';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport withErrorHandler from '../../HOCs/withErrorHandler';\r\n\r\nimport {\r\n  IingredientReducerState,\r\n  IingredientReducerAction,\r\n} from '../../store/reducers/ingredientReducer';\r\nimport {\r\n  ingredientActions,\r\n  connectIngredients,\r\n  IconnectIngredientsProps,\r\n  ingredientIncreaseHandler,\r\n  ingredientDecreaseHandler,\r\n  ingredientStoreHandler,\r\n  mapIngredientsStateToProps,\r\n} from '../../store/actions';\r\nimport { Dispatch, Action } from 'redux';\r\nimport { IingredientsKeys } from '../../components/Burger/BuildControls/BuildControls';\r\nimport produce from 'immer';\r\nimport { connect } from 'react-redux';\r\n// const immer = import(/* webpackChunkName: \"immer\" */ 'immer');\r\n\r\nconst BurgerDisplay = lazy(() =>\r\n  import(/* webpackChunkName: \"BurgerDisplay\" */\r\n  '../../components/Burger/BurgerDisplay/BurgerDisplay'),\r\n);\r\nconst BuildControls = lazy(() =>\r\n  import(/* webpackChunkName: \"BuildControls\" */\r\n  '../../components/Burger/BuildControls/BuildControls'),\r\n);\r\nconst Modal = lazy(() =>\r\n  import(/* webpackChunkName: \"Modal\" */ '../../components/UI/Modal/Modal'),\r\n);\r\nconst OrderSummary = lazy(() =>\r\n  import(/* webpackChunkName: \"OrderSummary\" */ '../../components/OrderSummary/OrderSummary'),\r\n);\r\n\r\n/**\r\n * @export\r\n * @interface Iingredients\r\n */\r\nexport interface Iingredients {\r\n  /**\r\n   * @type {number}\r\n   * @memberof Iingredients\r\n   */\r\n  salad: number;\r\n  /**\r\n   * @type {number}\r\n   * @memberof Iingredients\r\n   */\r\n  bacon: number;\r\n  /**\r\n   * @type {number}\r\n   * @memberof Iingredients\r\n   */\r\n  cheese: number;\r\n  /**\r\n   * @type {number}\r\n   * @memberof Iingredients\r\n   */\r\n  meat: number;\r\n}\r\n/**\r\n * @export\r\n * @interface IBurgerBuilderState\r\n */\r\nexport interface IBurgerBuilderState {\r\n  /**\r\n   * @type {boolean}\r\n   * @memberof IBurgerBuilderState\r\n   */\r\n  purchasable: boolean;\r\n  /**\r\n   * @type {boolean}\r\n   * @memberof IBurgerBuilderState\r\n   */\r\n  purchasing: boolean;\r\n  /**\r\n   * @type {boolean}\r\n   * @memberof IBurgerBuilderState\r\n   */\r\n  loading: boolean;\r\n  /**\r\n   * @type {string[]}\r\n   * @memberof IBurgerBuilderState\r\n   */\r\n  orders: string[];\r\n  /**\r\n   * @type {(Error | null | false)}\r\n   * @memberof IBurgerBuilderState\r\n   */\r\n  error: Error | null | false;\r\n}\r\nexport type IBurgerBuilderProps = IconnectIngredientsProps<RouteComponentProps>;\r\n/**\r\n * @class BurgerBuilder\r\n * @extends {Component<IconnectIngredientsProps<RouteComponentProps>, IBurgerBuilderState>}\r\n */\r\nclass BurgerBuilder extends Component<\r\n  IBurgerBuilderProps,\r\n  IBurgerBuilderState\r\n> {\r\n  /*  tslint:disable:object-literal-sort-keys */\r\n  public state: IBurgerBuilderState = {\r\n    purchasable: false,\r\n    purchasing: false,\r\n    loading: false,\r\n    orders: [],\r\n    error: null,\r\n  };\r\n  /*  tslint:enable:object-literal-sort-keys */\r\n  /**\r\n   * componentDidMount\r\n   */\r\n  public componentDidMount() {\r\n    this.fetchIngredients();\r\n  }\r\n\r\n  public componentDidUpdate(\r\n    prevProps: IBurgerBuilderProps,\r\n    prevState: IBurgerBuilderState,\r\n  ) {\r\n    if (!this.props.ingredients) {\r\n      return;\r\n    }\r\n    const nextState = produce(this.state, draft => {\r\n      // if (!draft.ingredients || draft.ingredients[type] <= 0) {\r\n      //   return draft;\r\n      // }\r\n      draft.purchasable = updatePurchasable(this.props.ingredients!);\r\n    });\r\n    if (nextState.purchasable !== prevState.purchasable) {\r\n      this.setState(nextState);\r\n    }\r\n  }\r\n\r\n  public ingredientIncreaseHandler = async (type: keyof Iingredients) => {\r\n    if (!this.props.ingredients) {\r\n      return;\r\n    }\r\n    await this.props.ingredientIncreaseHandler(type);\r\n    // const produce = (await immer).default;\r\n    const nextState = produce(this.state, draft => {\r\n      draft.purchasable = updatePurchasable(this.props.ingredients!);\r\n    });\r\n    this.setState(nextState);\r\n  };\r\n  public ingredientDecreaseHandler = async (type: keyof Iingredients) => {\r\n    if (!this.props.ingredients) {\r\n      return;\r\n    }\r\n    await this.props.ingredientDecreaseHandler(type);\r\n    // const produce = (await immer).default;\r\n    const nextState = produce(this.state, draft => {\r\n      // if (!draft.ingredients || draft.ingredients[type] <= 0) {\r\n      //   return draft;\r\n      // }\r\n      draft.purchasable = updatePurchasable(this.props.ingredients!);\r\n    });\r\n    this.setState(nextState);\r\n  };\r\n\r\n  public purchaseStartHandler = () => {\r\n    this.setState({ purchasing: true });\r\n  };\r\n  public purchaseCancelHandler = () => {\r\n    this.setState({ purchasing: false });\r\n  };\r\n  public purchaseContinueHandler = () => {\r\n    if (!this.props.ingredients) {\r\n      return;\r\n    }\r\n    // const newQueryString = (Object.entries(this.props.ingredients) as Array<\r\n    //   [keyof Iingredients, number]\r\n    // >)\r\n    //   .map(([igKey, igVal,]) => `${encodeURIComponent(igKey)}=${igVal}`)\r\n    //   .join('&');\r\n\r\n    this.props.history.push({\r\n      pathname: '/checkout',\r\n      // search: '?' + newQueryString,\r\n    });\r\n  };\r\n\r\n  public render() {\r\n    let burger = this.state.error ? (\r\n      <Retry\r\n        retryHandler={this.fetchIngredients}\r\n        mainMessage=\"Ingredients Failed To Load. Please \"\r\n        additionalMessage={\r\n          <span\r\n            style={{ color: 'blue', cursor: 'pointer' }}\r\n            onClick={this.offline}\r\n          >\r\n            work offline for now?\r\n          </span>\r\n        }\r\n      />\r\n    ) : (\r\n      <Loader />\r\n    );\r\n\r\n    let orderSummary = null;\r\n\r\n    if (this.props.ingredients) {\r\n      burger = (\r\n        <>\r\n          <React.Suspense fallback={<Loader />}>\r\n            <BurgerDisplay ingredients={this.props.ingredients} />\r\n          </React.Suspense>\r\n          <React.Suspense fallback={<Loader />}>\r\n            <BuildControls\r\n              ingredients={this.props.ingredients}\r\n              price={this.props.totalPrice!}\r\n              increase={this.ingredientIncreaseHandler}\r\n              decrease={this.ingredientDecreaseHandler}\r\n              purchasable={this.state.purchasable}\r\n              purchaseStart={this.purchaseStartHandler}\r\n            />\r\n          </React.Suspense>\r\n        </>\r\n      );\r\n\r\n      orderSummary = (\r\n        <React.Suspense fallback={<Loader />}>\r\n          <OrderSummary\r\n            ingredients={this.props.ingredients}\r\n            totalCost={this.props.totalPrice}\r\n            purchaseCancel={this.purchaseCancelHandler}\r\n            purchaseContinue={this.purchaseContinueHandler}\r\n          />\r\n        </React.Suspense>\r\n      );\r\n    }\r\n\r\n    // if (this.state.loading) {\r\n    //   orderSummary = <Loader />;\r\n    // }\r\n    return (\r\n      <React.Suspense fallback={<Loader />}>\r\n        <Modal show={this.state.purchasing} hider={this.purchaseCancelHandler}>\r\n          {orderSummary}\r\n        </Modal>\r\n        {burger}\r\n      </React.Suspense>\r\n    );\r\n  }\r\n\r\n  private fetchIngredients = async () => {\r\n    this.setState({ error: null });\r\n    try {\r\n      const response: AxiosResponse<Iingredients> = await axios.get(\r\n        '/ingredients.json',\r\n      );\r\n      const { data: newIngredients } = response;\r\n      this.props.ingredientStoreHandler(newIngredients);\r\n    } catch (error) {\r\n      // tslint:disable-next-line:no-console\r\n      this.setState({\r\n        error,\r\n      });\r\n    }\r\n  };\r\n  private offline = () => {\r\n    this.setState(\r\n      () => ({ error: false }),\r\n      () =>\r\n        this.props.ingredientStoreHandler({\r\n          bacon: 0,\r\n          cheese: 0,\r\n          meat: 0,\r\n          salad: 0,\r\n        }),\r\n    );\r\n  };\r\n}\r\n\r\nconst mapDispatch = () => ({\r\n  ingredientIncreaseHandler,\r\n  ingredientDecreaseHandler,\r\n  ingredientStoreHandler,\r\n});\r\n\r\nexport default connect(\r\n  mapIngredientsStateToProps,\r\n  mapDispatch,\r\n)(withErrorHandler(BurgerBuilder, axios));\r\n"],"sourceRoot":""}