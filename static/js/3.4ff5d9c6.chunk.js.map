{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Burger/BurgerDisplay/BurgerDisplay.module.css","components/Burger/BurgerIngredient/BurgerIngredient.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/BurgerDisplay/BurgerDisplay.js"],"names":["_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","__webpack_require__","d","__webpack_exports__","module","exports","Burger","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","_toConsumableArray","arr2","_arrayWithoutHoles","iter","Object","prototype","toString","call","from","_iterableToArray","_nonIterableSpread","BurgerIngredient","bread-top","react_default","a","createElement","className","styles","bread-bottom","meat","cheese","salad","bacon","this","props","type","Component","jsxArrayFromObject","inputObject","GivenComponent","propName","entries","map","_ref","_ref2","slicedToArray","igKey","igVal","_","myprops","defineProperty","assign","key","reduce","subArr","concat","React","memo","allIngredients","ingredients","Burger_BurgerIngredient_BurgerIngredient"],"mappings":"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","file":"static/js/3.4ff5d9c6.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"BurgerDisplay_Burger__ARHN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__1JbJF\",\"BreadTop\":\"BurgerIngredient_BreadTop__3WGm9\",\"Seeds1\":\"BurgerIngredient_Seeds1__wbLMI\",\"Seeds2\":\"BurgerIngredient_Seeds2__3B0WI\",\"Meat\":\"BurgerIngredient_Meat__1g-1z\",\"Cheese\":\"BurgerIngredient_Cheese__1vrHG\",\"Salad\":\"BurgerIngredient_Salad__Xz0zn\",\"Bacon\":\"BurgerIngredient_Bacon__jKfEN\"};","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React, { Component } from 'react';\r\nimport styles from './BurgerIngredient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component {\r\n  render() {\r\n    const ingredient = {\r\n      'bread-top': (\r\n        <div className={styles.BreadTop}>\r\n          <div className={styles.Seeds1} />\r\n          <div className={styles.Seeds2} />\r\n        </div>\r\n      ),\r\n      'bread-bottom': <div className={styles.BreadBottom} />,\r\n      meat: <div className={styles.Meat} />,\r\n      cheese: <div className={styles.Cheese} />,\r\n      salad: <div className={styles.Salad} />,\r\n      bacon: <div className={styles.Bacon} />,\r\n    };\r\n    return ingredient[this.props.type] || null;\r\n  }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","import React from 'react';\r\nimport styles from './BurgerDisplay.module.css';\r\nimport BurgerIngredient from '../BurgerIngredient/BurgerIngredient';\r\n\r\nexport const jsxArrayFromObject = ( inputObject, GivenComponent, propName ) => {\r\n  return Object.entries( inputObject )\r\n    .map( ( [igKey, igVal] ) => {\r\n      return [...Array( igVal )].map( ( _, i ) => {\r\n        const myprops = {\r\n          [propName]: igKey,\r\n        };\r\n        return <GivenComponent {...myprops} key={igKey + ( i + 1 )} />;\r\n      } );\r\n    } )\r\n    .reduce( ( arr, subArr ) => [...arr, ...subArr], [] );\r\n};\r\n\r\nconst burgerDisplay = props => {\r\n  let allIngredients = jsxArrayFromObject( props.ingredients, BurgerIngredient, 'type' );\r\n  if ( allIngredients.length === 0 ) {\r\n    allIngredients = <p>Please start adding ingredients</p>;\r\n  }\r\n  return (\r\n    <div className={styles.Burger}>\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {allIngredients}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo( burgerDisplay );\r\n"],"sourceRoot":""}