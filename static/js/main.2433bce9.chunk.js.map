{"version":3,"sources":["containers/Layout/NavigationItems/NavigationItem/NavigationItem.module.css","containers/Layout/Toolbar/Toolbar.module.css","components/UI/Loader/Loader.tsx","components/Retry/Retry.tsx","containers/Layout/NavigationItems/NavigationItem/NavigationItem.tsx","containers/Layout/NavigationItems/NavigationItems.tsx","components/UI/Loader/Loader.module.css","containers/Layout/NavigationItems/NavigationItems.module.css","containers/Layout/Toolbar/DrawerToggle/DrawerToggle.module.css","containers/Layout/Layout.module.css","HOCs/ErrorBoundary.tsx","containers/Layout/Toolbar/DrawerToggle/DrawerToggle.tsx","containers/Layout/Toolbar/Toolbar.tsx","containers/Layout/Layout.tsx","containers/App/App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","NavigationItem","active","Toolbar","DesktopOnly","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Loader_module_css__WEBPACK_IMPORTED_MODULE_1__","_Loader_module_css__WEBPACK_IMPORTED_MODULE_1___default","Loader","a","createElement","className","styles","retryStyle","borderBottom","color","cursor","Retry","_ref","retryHandler","additionalInfo","mainMessage","additionalMessage","style","textAlign","textTransform","onClick","exact","link","linkName","react_default","NavLink","to","activeClassName","navItems","url","name","NavigationItems","navElements","map","NavigationItems_NavigationItem_NavigationItem","key","load8","DrawerToggle","Main","ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","retry","setState","error","state","react","message","children","React","clicked","Logo","lazy","e","then","bind","drawerToggler","Toolbar_DrawerToggle_DrawerToggle","fallback","HQ","SideDrawer","Layout","showSideDrawer","hideSideDrawerHandler","toggleSideDrawerHandler","prevState","Fragment","Layout_Toolbar_Toolbar","open","hider","PureComponent","Checkout","Promise","all","BurgerBuilder","Orders","App","containers_Layout_Layout","ErrorBoundary_ErrorBoundary","Switch","Route","path","component","Component","Boolean","window","location","hostname","match","app","BrowserRouter","basename","containers_App_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2433bce9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__3CPAC\",\"active\":\"NavigationItem_active__29N-B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1ikXd\",\"DesktopOnly\":\"Toolbar_DesktopOnly__3kKBv\"};","import React from 'react';\r\nimport styles from './Loader.module.css';\r\n\r\nconst Loader = () => <div className={styles.Loader}>Loading...</div>;\r\n\r\nexport default Loader;\r\n","import React, { MouseEventHandler, ReactNode, SFC } from 'react';\r\n\r\nconst retryStyle = {\r\n  borderBottom: '1px solid lightblue',\r\n  color: 'lightblue',\r\n  cursor: 'pointer'\r\n};\r\n\r\nexport interface IRetryProps {\r\n  retryHandler: MouseEventHandler;\r\n  mainMessage?: ReactNode;\r\n  additionalMessage?: ReactNode;\r\n  additionalInfo?: ReactNode;\r\n}\r\n\r\nconst Retry: SFC<IRetryProps> = ({\r\n  retryHandler,\r\n  additionalInfo,\r\n  mainMessage,\r\n  additionalMessage\r\n}) => {\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <h3 style={{ textAlign: 'center', textTransform: 'capitalize' }}>\r\n        {mainMessage ? mainMessage : `An Error Has Occured, Please `}\r\n        <span onClick={retryHandler} style={retryStyle}>\r\n          {'Retry'}\r\n        </span>\r\n        .<br />\r\n        {additionalMessage ? additionalMessage : null}\r\n      </h3>\r\n      {additionalInfo ? (\r\n        <div style={{ textAlign: 'center' }}>\r\n          <h4>Additional Error Info</h4>\r\n          <p>{additionalInfo}</p>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Retry;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './NavigationItem.module.css';\r\n\r\n/** @export\r\n * @interface INavigationItem\r\n */\r\nexport interface INavigationItemProps {\r\n  /** Set if the url must be exact or not\r\n   * @type {boolean}\r\n   * @memberof INavigationItemProps\r\n   */\r\n  exact?: boolean;\r\n  /** Link the nav item should point to\r\n   * @type {string}\r\n   * @memberof INavigationItemProps\r\n   */\r\n  link: string;\r\n  /** Nav Name to display\r\n   * @type {string}\r\n   * @memberof INavigationItemProps\r\n   */\r\n  linkName: string;\r\n}\r\n/** Single nav item\r\n * @implements INavigationItemProps\r\n */\r\nconst NavigationItem: FunctionComponent<INavigationItemProps> = ({\r\n  exact,\r\n  link,\r\n  linkName\r\n}) => (\r\n  <li className={styles.NavigationItem}>\r\n    <NavLink to={link} exact={exact} activeClassName={styles.active}>\r\n      <span>{linkName}</span>\r\n    </NavLink>\r\n  </li>\r\n);\r\n\r\nexport default NavigationItem;\r\n","import React, { FunctionComponent } from 'react';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport styles from './NavigationItems.module.css';\r\n\r\nconst navItems = [\r\n  { url: '/', name: 'BurgerBuilder', exact: true },\r\n  { url: '/all-orders', name: 'My Orders', exact: true }\r\n  // { url: '/', name: 'About Us' },\r\n];\r\n// export interface INavigationItems {}\r\nconst NavigationItems: FunctionComponent<{}> = () => {\r\n  const navElements = navItems.map(({ url, name, exact }) => (\r\n    <NavigationItem key={name} link={url} linkName={name} exact={exact} />\r\n  ));\r\n  return <ul className={styles.NavigationItems}>{navElements}</ul>;\r\n};\r\n\r\nexport default NavigationItems;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__8lZyz\",\"load8\":\"Loader_load8__2GumZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__xV5bb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3kISY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Layout_Main__13vMk\"};","import * as React from 'react';\r\nimport Retry from '../components/Retry/Retry';\r\n\r\nexport interface IErrorBoundaryState {\r\n  error: Error | null;\r\n}\r\n\r\nexport default class ErrorBoundary extends React.Component<\r\n  {},\r\n  IErrorBoundaryState\r\n> {\r\n  public static getDerivedStateFromError(error: Error) {\r\n    return { error };\r\n  }\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: null\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <>\r\n        {this.state.error ? (\r\n          <Retry\r\n            retryHandler={this.retry}\r\n            additionalInfo={this.state.error.message}\r\n          />\r\n        ) : (\r\n          this.props.children\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  private retry = () => {\r\n    this.setState({ error: null });\r\n  };\r\n}\r\n","import React, { MouseEventHandler, FunctionComponent } from 'react';\r\nimport styles from './DrawerToggle.module.css';\r\n\r\nexport interface IDrawerToggle {\r\n  clicked: MouseEventHandler;\r\n}\r\n\r\nconst DrawerToggle: FunctionComponent<IDrawerToggle> = ( { clicked } ) => {\r\n  return (\r\n    <div onClick={clicked} className={styles.DrawerToggle}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrawerToggle;\r\n","import React, {\r\n  FunctionComponent,\r\n  lazy,\r\n  MouseEventHandler,\r\n  Suspense\r\n} from 'react';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from './DrawerToggle/DrawerToggle';\r\nimport styles from './Toolbar.module.css';\r\n// import Logo from '../Logo/Logo';\r\n\r\nconst Logo = lazy(() =>\r\n  import(/* webpackChunkName: \"Logo\" */ '../../../components/UI/Logo/Logo')\r\n);\r\n\r\nexport interface IToolbarProps {\r\n  drawerToggler: MouseEventHandler;\r\n}\r\nconst Toolbar: FunctionComponent<IToolbarProps> = ({ drawerToggler }) => {\r\n  return (\r\n    <header className={styles.Toolbar}>\r\n      <DrawerToggle clicked={drawerToggler} />\r\n      <Suspense fallback={<p>Logo...</p>}>\r\n        <Logo link=\"/\" HQ={true} />\r\n      </Suspense>\r\n      <nav className={styles.DesktopOnly}>\r\n        <NavigationItems />\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React, { lazy, PureComponent, Suspense } from 'react';\r\nimport Toolbar from './Toolbar/Toolbar';\r\nimport styles from './Layout.module.css';\r\n\r\nconst SideDrawer = lazy(() =>\r\n  import(/* webpackChunkName: \"SideDrawer\" */ './SideDrawer/SideDrawer')\r\n);\r\n\r\n/** @interface ILayoutState */\r\ninterface ILayoutState {\r\n  /**\r\n   * Show side drawer?\r\n   *\r\n   * @type {boolean}\r\n   * @memberof ILayoutState\r\n   */\r\n  showSideDrawer: boolean;\r\n}\r\n/**\r\n * A basic reuseable layout component\r\n * @class Layout\r\n * @extends {Component<{ children: JSX.Element }, ILayoutState>}\r\n */\r\nclass Layout extends PureComponent<{ children: JSX.Element }, ILayoutState> {\r\n  /**\r\n   * @implements {ILayoutState}\r\n   * @memberof Layout\r\n   */\r\n  public readonly state = {\r\n    showSideDrawer: false\r\n  };\r\n\r\n  /**\r\n   * Handler that hides the side drawer\r\n   *\r\n   * @memberof Layout\r\n   */\r\n  public hideSideDrawerHandler = () => this.setState({ showSideDrawer: false });\r\n  /**\r\n   * Handler that toggles the visibility\r\n   * of the side drawer\r\n   *\r\n   * @memberof Layout\r\n   */\r\n  public toggleSideDrawerHandler = () =>\r\n    this.setState(prevState => ({ showSideDrawer: !prevState.showSideDrawer }));\r\n\r\n  public render() {\r\n    return (\r\n      <>\r\n        <Toolbar drawerToggler={this.toggleSideDrawerHandler} />\r\n        <Suspense fallback={null}>\r\n          <SideDrawer\r\n            open={this.state.showSideDrawer}\r\n            hider={this.hideSideDrawerHandler}\r\n          />\r\n        </Suspense>\r\n        <main className={styles.Main}>{this.props.children}</main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React, { Component, lazy, Suspense } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport ErrorBoundary from '../../HOCs/ErrorBoundary';\r\nimport Layout from '../Layout/Layout';\r\n// import Checkout from '../Checkout/Checkout';\r\n\r\nconst Checkout = lazy(() =>\r\n  import(/* webpackChunkName: \"Checkout\", webpackPrefetch: true */ '../Checkout/Checkout')\r\n);\r\n\r\n// const SNCheckout = suspenseNode(Checkout, {});\r\n\r\nconst BurgerBuilder = lazy(() =>\r\n  import(/* webpackChunkName: \"BurgerBuilder\", webpackPrefetch: true */ '../BurgerBuilder/BurgerBuilder')\r\n);\r\n\r\nconst Orders = lazy(() =>\r\n  import(/* webpackChunkName: \"Orders\" */ '../Orders/Orders')\r\n);\r\n\r\nclass App extends Component {\r\n  public render() {\r\n    return (\r\n      <Layout>\r\n        <ErrorBoundary>\r\n          <Suspense fallback={<Loader />}>\r\n            <Switch>\r\n              <Route path=\"/\" exact={true} component={BurgerBuilder} />\r\n              <Route path=\"/all-orders\" exact={true} component={Orders} />\r\n              <Route path=\"/checkout\" exact={false} component={Checkout} />\r\n            </Switch>\r\n          </Suspense>\r\n          {/* {SNCheckout} */}\r\n        </ErrorBoundary>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './containers/App/App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst app = (\r\n  <BrowserRouter basename=\"/burger-builder\">\r\n    <App />\r\n  </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}