{"version":3,"sources":["containers/Checkout/ContactData/ContactData.styles.ts","containers/Checkout/ContactData/ContactData.tsx"],"names":["StyledContactData","Object","styled_base_browser_esm","target","name","styles","withErrorHandler","props","_useForm","useForm","_useForm2","slicedToArray","formState","setForm","city","country","deliveryMethod","email","phone","state","street","useCheckRefEquality","mapToInput","useCallback","makeMapToInputs","cancel","e","preventDefault","currentTarget","form","reset","history","goBack","submitBurger","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","reportValidity","ingredients","Error","submitBurgerOrder","totalPrice","token","userId","error","push","t0","console","stop","this","_x","apply","arguments","submitting","react_default","createElement","Loader","id","map","Button","type","children","onClick","btnType","Modal","show","hider","bgColor","minWidth","axios"],"mappings":"mMACaA,EAAiBC,OAAAC,EAAA,EAAAD,CAAA,OAAAE,OAAA,YAAAF,CAAA,CAAAG,KAAA,UAAAC,OAAA,qOC2GfC,sBA/F4B,SAAAC,GAAS,IAAAC,EACpBC,YAC5B,OACA,QACA,QACA,SACA,OACA,UACA,QACA,CAAC,iBAAkB,mBAT6BC,EAAAT,OAAAU,EAAA,EAAAV,CAAAO,EAAA,GAC3CI,EAD2CF,EAAA,GAChCG,EADgCH,EAAA,GAW1CI,EAAqEF,EAArEE,KAAMC,EAA+DH,EAA/DG,QAASC,EAAsDJ,EAAtDI,eAAgBC,EAAsCL,EAAtCK,MAAOb,EAA+BQ,EAA/BR,KAAMc,EAAyBN,EAAzBM,MAAOC,EAAkBP,EAAlBO,MAAOC,EAAWR,EAAXQ,OAElEC,YAAoBP,EAAM,QAE1B,IAAMQ,EAAaC,sBAAYC,YAAgBX,GAAU,CAACA,IAE1DQ,YAAoBC,EAAY,cAEhC,IAAMG,EAASF,sBACb,SAACG,GACCA,EAAEC,iBAEFD,EAAEE,cAAcC,MAAQH,EAAEE,cAAcC,KAAKC,QAC7CvB,EAAMwB,QAAQC,UAEhB,CAACzB,EAAMwB,UAETV,YAAoBI,EAAQ,UAE5B,IAAMQ,EAAY,eAAAC,EAAAjC,OAAAkC,EAAA,EAAAlC,CAAAmC,EAAAC,EAAAC,KAAG,SAAAC,EAAOb,GAAP,OAAAU,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACfjB,EAAEE,cAAcC,OAAQH,EAAEE,cAAcC,KAAKe,iBAD9B,CAAAH,EAAAE,KAAA,YAAAF,EAAAC,KAAA,EAGfhB,EAAEC,iBACGpB,EAAMsC,YAJI,CAAAJ,EAAAE,KAAA,cAKP,IAAIG,MAAM,+BALH,cAAAL,EAAAE,KAAA,EAOTpC,EAAMwC,kBACVnC,EACAL,EAAMsC,YACNtC,EAAMyC,WACNzC,EAAM0C,MACN1C,EAAM2C,QAZO,WAcX3C,EAAM4C,MAdK,CAAAV,EAAAE,KAAA,cAePpC,EAAM4C,MAfC,OAiBf5C,EAAMwB,QAAQqB,KAAK,eAjBJX,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAY,GAAAZ,EAAA,SAoBfa,QAAQH,MAAM,+BAAdV,EAAAY,IApBe,yBAAAZ,EAAAc,SAAAhB,EAAAiB,KAAA,aAAH,gBAAAC,GAAA,OAAAvB,EAAAwB,MAAAF,KAAAG,YAAA,GAyBZ9B,EAAOtB,EAAMqD,WACjBC,EAAAxB,EAAAyB,cAACC,EAAA,EAAD,MAEAF,EAAAxB,EAAAyB,cAAA,QAAME,GAAG,cACPH,EAAAxB,EAAAyB,cAAA,gEACC,CAAC1D,EAAMa,EAAOC,GAAQ+C,IAAI3C,GAC3BuC,EAAAxB,EAAAyB,cAAA,gBACED,EAAAxB,EAAAyB,cAAA,yBACC,CAAC1C,EAAQN,EAAMK,EAAOJ,GAAUkD,IAAI3C,IAEvCuC,EAAAxB,EAAAyB,cAAA,gBACED,EAAAxB,EAAAyB,cAAA,iCACC,CAAC9C,GAAiBiD,IAAI3C,IAGzBuC,EAAAxB,EAAAyB,cAAA,WACED,EAAAxB,EAAAyB,cAACI,EAAA,EAAD,CAAQC,KAAK,QAAQC,SAAS,SAASC,QAAS5C,EAAQ6C,QAAQ,WAChET,EAAAxB,EAAAyB,cAACI,EAAA,EAAD,CAAQC,KAAK,SAASC,SAAS,QAAQC,QAASpC,EAAcqC,QAAQ,cAI5E,OACET,EAAAxB,EAAAyB,cAAC9D,EAAD,KACE6D,EAAAxB,EAAAyB,cAACS,EAAA,EAAD,CAAOC,MAAM,EAAMC,MAAOhD,EAAQiD,QAAQ,QAAQC,SAAU,KACzD9C,KAgBoC+C","file":"static/js/ContactData.0a27c1af.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\r\nexport const StyledContactData = styled.div`\r\n  margin: 10px auto;\r\n  text-align: center;\r\n\r\n  form div {\r\n    margin: 4px 0;\r\n  }\r\n\r\n  form {\r\n    overflow: auto;\r\n    box-sizing: border-box;\r\n    border-radius: 10px;\r\n    background-color: rgba(255, 255, 255, 0.842);\r\n  }\r\n\r\n  @media (min-width: 550px) {\r\n    max-width: 540px;\r\n  }\r\n`;\r\n","// import styled from 'styled-components';\r\nimport React, { MouseEvent, FC, useCallback } from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Loader from '../../../components/UI/Loader/Loader';\r\nimport Modal from '../../../components/UI/Modal/Modal';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport withErrorHandler from '../../../HOCs/withErrorHandler';\r\nimport axios from '../../../axios-orders';\r\nimport { StyledContactData } from './ContactData.styles';\r\nimport { makeMapToInputs } from '../../../components/UI/Input/';\r\nimport { useForm, useCheckRefEquality } from '../../../shared/CustomHooks';\r\nimport { submitBurgerOrder } from '../../../store/actions';\r\nimport { Iingredients } from '../../../types/ingredients';\r\nconst ContactData: FC<IContactDataProps> = props => {\r\n  const [formState, setForm,] = useForm(\r\n    'name',\r\n    'phone',\r\n    'email',\r\n    'street',\r\n    'city',\r\n    'country',\r\n    'state',\r\n    ['deliveryMethod', 'very_expensive',],\r\n  );\r\n  const { city, country, deliveryMethod, email, name, phone, state, street } = formState;\r\n\r\n  useCheckRefEquality(city, 'city');\r\n\r\n  const mapToInput = useCallback(makeMapToInputs(setForm), [setForm,]);\r\n\r\n  useCheckRefEquality(mapToInput, 'mapToInput');\r\n\r\n  const cancel = useCallback(\r\n    (e: MouseEvent<HTMLButtonElement>) => {\r\n      e.preventDefault();\r\n      // tslint:disable-next-line: no-unused-expression\r\n      e.currentTarget.form && e.currentTarget.form.reset();\r\n      props.history.goBack();\r\n    },\r\n    [props.history,],\r\n  );\r\n  useCheckRefEquality(cancel, 'cancel');\r\n\r\n  const submitBurger = async (e: MouseEvent<HTMLButtonElement>) => {\r\n    if (e.currentTarget.form && e.currentTarget.form.reportValidity()) {\r\n      try {\r\n        e.preventDefault();\r\n        if (!props.ingredients) {\r\n          throw new Error('Empty Ingredients object!!!');\r\n        }\r\n        await props.submitBurgerOrder(\r\n          formState,\r\n          props.ingredients,\r\n          props.totalPrice,\r\n          props.token,\r\n          props.userId,\r\n        );\r\n        if (props.error) {\r\n          throw props.error;\r\n        }\r\n        props.history.push('/all-orders');\r\n      } catch (error) {\r\n        // tslint:disable-next-line:no-console\r\n        console.error('[submitBurger (ContactData)]', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const form = props.submitting ? (\r\n    <Loader />\r\n  ) : (\r\n    <form id=\"order_form\">\r\n      <h3>Enter Your Contact Details to Complete Your Order.</h3>\r\n      {[name, email, phone,].map(mapToInput)}\r\n      <fieldset>\r\n        <legend>Address</legend>\r\n        {[street, city, state, country,].map(mapToInput)}\r\n      </fieldset>\r\n      <fieldset>\r\n        <legend>Delivery Method</legend>\r\n        {[deliveryMethod,].map(mapToInput)}\r\n      </fieldset>\r\n\r\n      <div>\r\n        <Button type=\"reset\" children=\"CANCEL\" onClick={cancel} btnType=\"Danger\" />\r\n        <Button type=\"submit\" children=\"ORDER\" onClick={submitBurger} btnType=\"Success\" />\r\n      </div>\r\n    </form>\r\n  );\r\n  return (\r\n    <StyledContactData>\r\n      <Modal show={true} hider={cancel} bgColor=\"white\" minWidth={650}>\r\n        {form}\r\n      </Modal>\r\n    </StyledContactData>\r\n  );\r\n};\r\n\r\nexport interface IContactDataProps extends RouteComponentProps {\r\n  totalPrice: string;\r\n  submitting: boolean;\r\n  ingredients: Iingredients | null;\r\n  token: string | null;\r\n  error: false | Error;\r\n  userId: string | null;\r\n  submitBurgerOrder: typeof submitBurgerOrder;\r\n}\r\n\r\nexport default withErrorHandler(ContactData, axios);\r\n"],"sourceRoot":""}